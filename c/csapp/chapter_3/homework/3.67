# strB process(strA s)
# s in %rdi
process:
  movq %rdi, %rax
  movq 24(%rsp), %rdx
  movq (%rdx), %rdx
  movq 16(%rsp), %rcx
  movq %rcx, (%rdi)
  movq 8(%rsp), %rcx
  movq %rcx, 8(%rdi)
  movq %rdx, 16(%rdi)
  ret

# long eval(long x, long y, long z)
# x in %rdi, y in %rsi, z in %rdx
eval:
  subq $104, %rsp
  movq %rdx, 24(%rsp)
  leaq 24(%rsp), %rax
  movq %rdi, (%rsp)
  movq %rsi, 8(%rsp)
  movq %rax, 16(%rsp)
  leaq 64(%rsp), %rdi
  call process
  movq 72(%rsp), %rax
  addq 64(%rsp), %rax
  addq 80(%rsp), %rax
  addq $104, %rsp
  ret


A: 
104  +------------------+
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
 64  +------------------+ <-- %rdi
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
 32  +------------------+
     |         z        |
 24  +------------------+
     |        &z        |
 16  +------------------+
     |         y        |
  8  +------------------+
     |         x        |
  0  +------------------+ <-- %rsp


B: 
%rdi


C:
依据 rsp 指针的偏移，但是要在原先基础上加上8字节(用于保存返回的地址)


D: 
eval pass address %rsp+64 to process, process store data from here as beginning, finially return this address


E: 
104  +------------------+
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
     |                  |
 88  +------------------+
     |        z         |
 80  +------------------+
     |        x         |
 72  +------------------+
     |        y         |
 64  +------------------+ <-- %rdi(eval pass in)
     |                  |  \
     |                  |   -- %rax(process pass out)
     |                  |
     |                  |
     |                  |
     |                  |
 32  +------------------+
     |         z        |
 24  +------------------+
     |        &z        |
 16  +------------------+
     |         y        |
  8  +------------------+
     |         x        |
  0  +------------------+ <-- %rsp in eval
     |                  |
 -8  +------------------+ <-- %rsp in process


F:
调用者预先初始化被调用者和自身所占用的栈空间，在调用时，指定一块内存基址，以让调用者所构造的数据在这个基址的基础上进行延伸，并在调用完毕后返回该指针
