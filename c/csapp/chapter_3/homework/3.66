# long sum_col(long n, long A[NR(n)][NC(n)], long j)
# n in %rdi, A in %rsi, j in %rdx
sum_col:
  leaq 1(,%rdi,4), %r8        # %r8 = 4n + 1
  leaq (%rdi,%rdi,2), %rax    # %rax = 3n
  movq %rax, %rdi             # %rdi = 3n
  testq %rax, %rax            
  jle .L4                     
  salq $3, %r8                # %r8 = 8(4n + 1)
  leaq (%rsi,%rdx,8), %rcx    # %rcx = A + 8j
  movl $0, %eax               
  movl $0, %edx               
.L3:
  addq (%rcx), %rax           
  addq $1, %rdx               
  addq %r8, %rcx              
  cmpq %rdi, %rdx             
  jne .L3                     
  rep
  ret
.L4:
  movl $0, %eax               
  ret


因为第 15 行对比，可知该段汇编对应代码 i < NR(n)，而又由前面可知，%rdx = i，%rdi = 3n，所以: 
#define NR(x) (3x)

因为 %rcx 做的数组中偏移的指针，并且由 14 行可知每次循环加上 8(4n + 1)，其中 8 作为 long 的补长，由数组定义 A[NR(n)][NC(n)] 可知，每次偏移的是一整个一维数组的长度，所以: 
#define NC(x) ((4x) + 1)
