# long rsum(long *start, long count)
# start in %rdi, count in %rsi, return value in %rax
# 
# NOTE: 
#   * Ignore the code of init stack

rsum:
  irmovq %-1, %r9     # Const value, index of [count]
  irmovq %8, %r10     # Const value, index of [start]

  xorq %rax, %rax     # return value register, it's been a global register
  
  andq %rsi, %rsi 
  je return           # if [count == 0] return this function
  
  pushq %rbx
  mrmovq (%rdi), %rbx # fetch *start into rbx
  
  addq %r9, %rsi      # --count
  addq %r10, %rdi     # ++start
  
  call rsum

  popq %rbx
  addq %rbx, %rax     # return value

return:
  ret
