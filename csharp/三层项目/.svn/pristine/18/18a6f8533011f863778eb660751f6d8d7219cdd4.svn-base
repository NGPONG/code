using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SQLite;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WP.Demo.Common;
using WP.Demo.Model;

namespace WP.Demo.DAL
{
    public class MemberInfoDAL
    {
        /// <summary>
        ///  获取数据
        /// </summary>
        /// <returns>序列化后的字节数组</returns>
        public List<byte[]> GetData()
        {
            // 开启计时
            Stopwatch sw = new Stopwatch();
            sw.Start();
            // 错误信息
            string errMessage = string.Empty;
            // 函数名称
            string methodName = System.Reflection.MethodBase.GetCurrentMethod().ReflectedType.FullName + "." + new System.Diagnostics.StackTrace().GetFrame(0).GetMethod().Name;

            StringBuilder sql = new StringBuilder();
            sql.AppendLine("SELECT a.Mid,a.MName,b.MTitle as MTypeName,a.MPhone,a.MMoney FROM MemberInfo a");
            sql.AppendLine("LEFT JOIN MemberTypeInfo b on a.MTypeId = b.mid");

            try
            {
                DataTable dtTemp = SQLiteHelper.GetDataTable(sql.ToString());
                // 接受数据的数据模型类的集合
                List<MemberInfoModel_GetData> listGetDataModel = new List<MemberInfoModel_GetData>();
                for (int i = 0; i < dtTemp.Rows.Count; i++)
                {
                    listGetDataModel.Add(new MemberInfoModel_GetData()
                    {
                        MId = Convert.ToInt32(dtTemp.Rows[i]["MId"]),
                        MName = Convert.ToString(dtTemp.Rows[i]["MName"]),
                        MTypeName = Convert.ToString(dtTemp.Rows[i]["MTypeName"]),
                        MPhone = Convert.ToString(dtTemp.Rows[i]["MPhone"]),
                        MMoney = Convert.ToDecimal(dtTemp.Rows[i]["MMoney"])
                    });
                }
                List<byte[]> listSerializeBuff = SerializableObject.SerializeObject<MemberInfoModel_GetData>(listGetDataModel);

                return listSerializeBuff;
            }
            catch (Exception objException)
            {
                if (objException.InnerException != null)
                {
                    throw new Exception(objException.InnerException.Message);
                }
                throw new Exception(objException.Message);
            }
            finally
            {
                sw.Stop();
                // 写日志
                RecordText.Write(sw.Elapsed.TotalSeconds, methodName, sql.ToString(), null, errMessage);
            }
        }

    }
}
