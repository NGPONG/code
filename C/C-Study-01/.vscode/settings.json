{
    "files.defaultLanguage": "c",                            // 输入分号(C/C++的语句结束标识)后自动格式化当前这一行的代码
    "editor.suggest.snippetsPreventQuickSuggestions": false, // clangd的snippets有很多的跳转点，不用这个就必须手动触发Intellisense了
    "editor.acceptSuggestionOnEnter": "off",                 // 我个人的习惯，按回车时一定是真正的换行，只有tab才会接受Intellisense
    "editor.snippetSuggestions": "top",                      // （可选）snippets显示在补全列表顶端，默认是inline
    "editor.formatOnType": true,                             // 
    "window.title": "${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}",         
    "code-runner.runInTerminal": true,                       // 设置成false会在“输出”中输出，无法输入
    "code-runner.executorMap": {                             // 右键run code时运行的命令；未注释的仅适用于PowerShell（Win10默认），文件名中有空格也可以编译运行；注释掉的适用于cmd（win7默认），PS和bash也能用，但文件名中有空格时无法运行
        "c": "cd $dir && gcc './*.c' -o '$workspaceRoot/DEBUG/$c_cr.exe' -Wall -g -O2 -static-libgcc -std=c11 -fexec-charset=GBK -finput-charset=GBK && &'$workspaceRoot/DEBUG/$c_cr'",
        "cpp": "cd $dir && g++ './*.c' -o '$workspaceRoot/DEBUG/$cpp_cr.exe' -Wall -g -O2 -static-libgcc -fexec-charset=GBK -finput-charset=GBK && &'$workspaceRoot/DEBUG/$cpp_cr'"
    }, 
    "code-runner.saveFileBeforeRun": true,                   // run code前保存
    "code-runner.preserveFocus": false,                      // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
    "code-runner.clearPreviousOutput": true,                 // 每次run code前清空属于code runner的终端消息，默认false
    "code-runner.ignoreSelection": true,                     // 默认为false，效果是鼠标选中一块代码后可以单独执行，但C是编译型语言，不适合这样用
    "C_Cpp.clang_format_sortIncludes": false,                // 格式化时调整include的顺序（按字母排序）
    "files.associations": {
        "*.c": "c",
        "*.cpp": "cpp",
        "*.h": "head_file"
    },
    "C_Cpp.clang_format_fallbackStyle": "LLVM"
}