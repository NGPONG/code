// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kwmsgdefine.proto

#include "kwmsgdefine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace KWMsg {
}  // namespace KWMsg
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kwmsgdefine_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kwmsgdefine_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kwmsgdefine_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_kwmsgdefine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021kwmsgdefine.proto\022\005KWMsg*\277F\n\016EGameEven"
  "tCode\022\013\n\007SUCCESS\020\000\022\020\n\014UNKOWN_ERROR\020\001\022\020\n\014"
  "CONFIG_ERROR\020\002\022\025\n\021INVALID_PARAMETER\020\003\022\030\n"
  "\024SYSTEM_FUNCTION_LOCK\020\004\022\020\n\014ILLEGAL_TEXT\020"
  "\005\022\025\n\021TEXT_LENGTH_LIMIT\020\006\022\024\n\020RECORD_NOT_F"
  "OUND\020\007\022\021\n\rADD_ROW_ERROR\020\010\022\030\n\024GET_GAME_SE"
  "RVER_FAIL\020\n\022\034\n\030CONNECT_GAME_SERVER_FAIL\020"
  "\013\022\022\n\016SVR_ID_INVALID\020\016\022\026\n\022SVR_ZONEID_INVA"
  "LID\020\017\022\025\n\021SVR_ZONE_OVERLOAD\020\020\022\023\n\017SVR_MAIN"
  "TAINING\020\021\022\024\n\020REGISTER_DISABLE\020\022\022\025\n\021RECON"
  "NECT_SUCCESS\020\023\022\022\n\016RECONNECT_FAIL\020\024\022\016\n\nNO"
  "T_ONLINE\020\025\022\031\n\025PLAYER_NOT_HAVA_WITCH\020\036\022$\n"
  " CAN_NOT_SEND_GIFT_FOR_MAIN_WITCH\020\037\022\034\n\030G"
  "IFT_BOX_ITEM_NOT_ENOUGH\020 \022\026\n\022GIFT_BOX_MA"
  "X_LIMIT\020!\022\031\n\025GIFT_BOX_MUST_BE_FULL\020\"\022$\n "
  "FREE_GIFT_BOX_MUST_HAVE_ONE_GIFT\020#\022\036\n\032FR"
  "EE_GIFT_COUNT_NOT_ENOUGH\020$\022\030\n\024GIFT_ITEM_"
  "NOT_ENOUGH\020%\022\034\n\030CAN_NOT_SEND_UNLOCK_GIFT"
  "\020&\022$\n MAGICAL_MEDICINE_ITEM_NOT_ENOUGH\020\'"
  "\022\023\n\017MAX_WITCH_LEVEL\020(\022\033\n\027MAX_WITCH_EMOTI"
  "ON_LEVEL\020)\022\031\n\025INVALID_WITCH_SKIN_ID\020*\022\"\n"
  "\036WITCH_SKIN_IS_ALREADY_UNLOCKED\020+\022\026\n\022DIA"
  "MOND_NOT_ENOUGH\020,\022\024\n\020AT_LEAST_SR_CARD\020-\022"
  "\034\n\030ALREADY_SET_HOUSE_KEEPER\020.\022%\n!CURRENT"
  "_WITCH_IS_NOT_HOUSE_KEEPER\020/\022\036\n\032CURRENT_"
  "SKIN_IS_NOT_UNLOCK\0200\022%\n!LOGIN_INVALID_AC"
  "COUNT_OR_PASSWORD\0202\022\033\n\027LOGIN_ACCOUNT_NOT"
  "_EXIST\0203\022 \n\034LOGIN_REGISTER_ACCOUNT_EXIST"
  "\0204\022$\n LOGIN_REGISTER_PASS_CHAR_INVALID\0205"
  "\022#\n\037LOGIN_REGISTER_PASS_LEN_INVALID\0206\022\"\n"
  "\036LOGIN_ACCOUNT_CHANNEL_MISMATCH\0207\022\024\n\020KCP"
  "_OBJECT_EXIST\020<\022#\n\037QUEUE_UP_INVALID_STIL"
  "L_IN_QUEUE\020F\022\034\n\030QUEUE_UP_PUSH_INTO_QUEUE"
  "\020G\022 \n\034QUEUE_UP_CONSUME_TOKEN_FAILD\020H\022\"\n\036"
  "QUEUE_UP_CONSUME_TOKEN_SUCCESS\020I\022\036\n\032PLAY"
  "ER_NAME_INVALID_FORMAT\020P\022\035\n\031PLAYER_NAME_"
  "INVALID_WORDS\020Q\022\036\n\032PLAYER_NAME_INVALID_L"
  "ENGTH\020R\022\025\n\021PLAYER_NAME_EXIST\020S\022\033\n\027BTL_MI"
  "SS_PRIMARY_TARGET\020d\022\025\n\020BTL_SKILL_SEALED\020"
  "\226\001\022\036\n\031BTL_SKILL_INVALID_CONSUME\020\227\001\022\024\n\017BT"
  "L_SKILL_IN_CD\020\230\001\022\026\n\021BTL_NOT_AUTO_MODE\020\240\001"
  "\022\024\n\017BTL_TARGET_DEAD\020\241\001\022\027\n\022BTL_CAN_NOT_AC"
  "TION\020\242\001\022\033\n\026BTL_UNCONTROLLABLE_NPC\020\243\001\022\026\n\021"
  "BTL_CAN_NOT_LEAVE\020\244\001\022\022\n\rBTL_IN_BATTLE\020\245\001"
  "\022\026\n\021BTL_NOT_IN_BATTLE\020\246\001\022\026\n\021BATTLE_ID_IN"
  "VALID\020\310\001\022\"\n\035PRE_BTL_INVALID_WITCH_TEAM_I"
  "D\020\311\001\022$\n\037PRE_BTL_DUPLICATE_WITCH_IN_TEAM\020"
  "\312\001\022\031\n\024GAME_PLAY_ID_INVALID\020\313\001\022\025\n\020SCENE_I"
  "D_INVALID\020\314\001\022\031\n\024PRE_BTL_TEAM_ID_LOCK\020\315\001\022"
  "#\n\036PRE_BTL_TEAM_ID_ALREADY_UNLOCK\020\316\001\022\035\n\030"
  "PRE_BTL_PRE_TEAM_ID_LOCK\020\317\001\022)\n$BATTLE_CO"
  "NTINUOUS_CONDITION_NOT_PASS\020\320\001\022$\n\037BATTLE"
  "_CONTINUOUS_COUNT_INVALID\020\321\001\022\"\n\035BATTLE_C"
  "ANT_CONTINUOUS_BATTLE\020\322\001\022\037\n\032BATTLE_NOT_I"
  "N_BATTLE_SCENE\020\323\001\022)\n$BATTLE_CONTINUOUS_B"
  "ATTLE_NOT_SUPPORT\020\324\001\022%\n PRE_BTL_WITCH_ID"
  "_INVALID_IN_TEAM\020\325\001\022\033\n\026STORY_MODULEID_IN"
  "VALID\020\254\002\022 \n\033STORY_CHAPTERSTATUS_INVALID\020"
  "\255\002\022\031\n\024STORY_BATTLE_INVALID\020\256\002\022\037\n\032BUY_POW"
  "ER_NOT_ENOUGH_MONEY\020\257\002\022\024\n\017BUY_POWER_LIMI"
  "T\020\260\002\022\032\n\025COLLEGE_DRAMA_INVALID\020\261\002\022\030\n\023HOME"
  "WORK_NOT_FINISH\020\262\002\022\035\n\030HOMEWORK_TASK_NOT_"
  "FINISH\020\263\002\022\022\n\rEXAM_NOT_PASS\020\264\002\022\024\n\017EXAM_ID"
  "_INVALID\020\265\002\022\030\n\023QUESTION_ID_INVALID\020\266\002\022\035\n"
  "\030HOMEWORK_TASK_ID_INVALID\020\267\002\022\034\n\027SEMESTER"
  "_STATUS_INVALID\020\270\002\022\031\n\024STUDY_STATUS_INVAL"
  "ID\020\271\002\022\036\n\031QUESTION_ALREADY_ANSWERED\020\272\002\022\034\n"
  "\027BUY_POWER_INVALID_COUNT\020\273\002\022\034\n\027EXPLORE_N"
  "ODE_NOT_UNLOCK\020\300\002\022\033\n\026EXPLORE_MAP_NOT_UNL"
  "OCK\020\301\002\022\034\n\027EXPLORE_INVALID_NODE_ID\020\302\002\022\036\n\031"
  "EXPLORE_ALREADY_LAST_NODE\020\303\002\022*\n%EXPLORE_"
  "UNLOCK_MAP_CONDITION_NOT_PASS\020\304\002\022 \n\033EXPL"
  "ORE_ALREADY_UNLOCK_NODE\020\305\002\022\037\n\032EXPLORE_AL"
  "READY_UNLOCK_MAP\020\306\002\022)\n$EXPLORE_AREA_REWA"
  "RDS_ALREADY_RECEIVE\020\307\002\022\'\n\"EXPLORE_AREA_R"
  "EWARDS_COND_NOT_PASS\020\310\002\0222\n-EXPLORE_MAP_M"
  "AIN_LINE_REWARDS_ALREADY_RECEIVE\020\311\002\0220\n+E"
  "XPLORE_MAP_MAIN_LINE_REWARDS_COND_NOT_PA"
  "SS\020\312\002\0224\n/EXPLORE_MAP_BRANCH_LINE_REWARDS"
  "_ALREADY_RECEIVE\020\313\002\0222\n-EXPLORE_MAP_BRANC"
  "H_LINE_REWARDS_COND_NOT_PASS\020\314\002\022\036\n\031EXPLO"
  "RE_NODE_NOT_COMPLETE\020\315\002\022%\n EXPLORE_THREE"
  "_STAR_NODE_NOT_FULL\020\316\002\022%\n EXPLORE_SWEEP_"
  "CONSUME_NOT_ENOUGH\020\317\002\022)\n$EXPLORE_CHALLEN"
  "GE_CONSUME_NOT_ENOUGH\020\320\002\022)\n$EXPLORE_NODE"
  "_EVENT_REPEACT_CHALLENGE\020\321\002\022\031\n\024DISPATCH_"
  "NOT_ENABLED\020\336\002\022\"\n\035DISPATCH_APPOINT_AREA_"
  "INVALID\020\337\002\022\037\n\032DISPATCH_SWITCH_AREA_IN_CD"
  "\020\340\002\022\036\n\031DISPATCH_SWITCH_AREA_SAME\020\341\002\022\036\n\031D"
  "ISPATCH_AFFAIR_NOT_EXIST\020\342\002\022)\n$DISPATCH_"
  "AFFAIR_POSITION_NOT_FINISHE\020\343\002\022%\n DISPAT"
  "CH_AFFAIR_POSITION_INVALID\020\344\002\022%\n DISPATC"
  "H_AFFAIR_POSITION_RUNNING\020\345\002\022#\n\036DISPATCH"
  "_AFFAIR_POSITION_EMPTY\020\346\002\022&\n!DISPATCH_AF"
  "FAIR_AREA_TYPE_INVALID\020\347\002\022 \n\033DISPATCH_WI"
  "TCH_NOT_UNLOCKED\020\350\002\022&\n!DISPATCH_WITCH_AF"
  "FAIR_NOT_FNISHED\020\351\002\022 \n\033DISPATCH_WITCH_IN"
  "_BLACKLIST\020\352\002\022\037\n\032DISPATCH_DRESS_UP_NOT_O"
  "PEN\020\353\002\022#\n\036DISPATCH_WITCH_AFFAIR_NOT_OPEN"
  "\020\354\002\022%\n DISPATCH_WITCH_FRAGMENT_NOT_OPEN\020"
  "\355\002\022$\n\037DISPATCH_QUICK_COLLECT_NOT_OPEN\020\356\002"
  "\022#\n\036DISPATCH_APPOINT_ALREADY_START\020\357\002\022\037\n"
  "\032DISPATCH_APPOINT_NOT_START\020\360\002\022 \n\033HOUSEK"
  "EEPER_SIGNIN_NOT_INIT\020\375\002\022$\n\037HOUSEKEEPER_"
  "SIGNIN_ALREADY_INIT\020\376\002\022(\n#HOUSEKEEPER_SI"
  "GNIN_ALREADY_FINISHED\020\377\002\022\035\n\030PNEUMAISLAND"
  "_NOT_ENABLED\020\206\003\022!\n\034PNEUMAISLAND_BOSS_ID_"
  "INVALID\020\207\003\022\"\n\035PNEUMAISLAND_BOSS_ID_UNLOC"
  "KED\020\210\003\022&\n!PNEUMAISLAND_REWARD_PARAM_INVA"
  "LID\020\211\003\022+\n&PNEUMAISLAND_REWARD_CONDITION_"
  "NOT_PASS\020\212\003\022$\n\037PNEUMAISLAND_REWARD_ALREA"
  "DY_GOT\020\213\003\022+\n&PNEUMAISLAND_BATTLE_CONSUME"
  "_NOT_ENOUGH\020\214\003\022\"\n\035PNEUMAISLAND_GROUP_ID_"
  "INVALID\020\215\003\022%\n PNEUMAISLAND_PNEUMA_TYPE_I"
  "NVALID\020\216\003\022*\n%PNEUMAISLAND_DECOMPOSE_SCHE"
  "ME_INVALID\020\217\003\022 \n\033ACTIVE_MISSION_INVALID_"
  "FLAG\020\220\003\022&\n!ACTIVE_MISSION_CAN_NOT_GET_RE"
  "WARD\020\221\003\022&\n!ACTIVE_MISSION_ALREADY_GOT_RE"
  "WARD\020\222\003\022*\n%ACTIVE_MISSION_SET_REWARD_FLA"
  "G_FAILED\020\223\003\022&\n!ACTIVE_MISSION_SEND_REWAR"
  "D_FAILED\020\224\003\022#\n\036ACTIVE_MISSION_MISSING_HA"
  "NDLER\020\225\003\022\035\n\030ACTIVE_MISSION_NOT_EXIST\020\226\003\022"
  "\036\n\031ACTIVE_MISSION_UNFINISHED\020\227\003\022\036\n\031ACTIV"
  "E_MISSION_GOT_REWARD\020\230\003\022\037\n\032STAR_LEVEL_IN"
  "VALID_ITEM_ID\020\244\003\022!\n\034STAR_LEVEL_DEBRIS_NO"
  "T_ENOUGH\020\245\003\022\033\n\026STAR_LEVEL_MAX_LIMITED\020\246\003"
  "\022\034\n\027DRAW_CARD_INVALID_COUNT\020\256\003\022 \n\033DRAW_C"
  "ARD_MAX_COUNT_LIMITED\020\257\003\022#\n\036DRAW_CARD_IN"
  "VALID_CARD_POOL_ID\020\260\003\022\033\n\026DRAW_CARD_CAN_N"
  "OT_FREE\020\261\003\022\027\n\022DRAW_CARD_IS_IN_CD\020\262\003\022\036\n\031D"
  "RAW_CARD_ITEM_NOT_ENOUGH\020\263\003\022\"\n\035DRAW_CARD"
  "_CURRENCY_NOT_ENOUGH\020\264\003\022%\n WITCH_KNOWLED"
  "GE_INVALID_OPT_TYPE\020\270\003\022#\n\036WITCH_KNOWLEDG"
  "E_ROW_NOT_EXISTS\020\271\003\022\036\n\031WITCH_KNOWLEDGE_M"
  "AX_LEVEL\020\272\003\022%\n WITCH_KNOWLEDGE_LEVEL_NOT"
  "_ENOUGH\020\273\003\022(\n#WITCH_KNOWLEDGE_RESOURCE_N"
  "OT_ENOUGH\020\274\003\022-\n(WITCH_KNOWLEDGE_SUBJECT_"
  "LEVEL_NOT_ENOUGH\020\275\003\022&\n!WITCH_KNOWLEDGE_M"
  "AX_SUBJECT_LEVEL\020\276\003\022\022\n\rMAIL_REPEATED\020\303\003\022"
  "\021\n\014MAIL_EXPIRED\020\304\003\022\026\n\021BOTARENA_NOT_OPEN\020"
  "\314\003\022 \n\033BOTARENA_REFRESH_NOT_ENOUGH\020\315\003\022(\n#"
  "BOTARENA_BUT_SHABOWTOKEN_NOT_ENOUGH\020\316\003\022+"
  "\n&BOTARENA_QUICK_CONFIG_INVALID_WITCH_ID"
  "\020\317\003\022\"\n\035BOTARENA_CHALLENGE_NOT_ENOUGH\020\320\003\022"
  "#\n\036BOTARENA_TRANSPOD_ENTER_BATTLE\020\321\003\022(\n#"
  "BOTARENA_CHALLENGE_ALREADY_FINISHED\020\322\003\022\036"
  "\n\031BOTARENA_REPLAY_NOT_FOUND\020\323\003\022!\n\034BOTARE"
  "NA_CHALLENGE_NOT_FOUND\020\324\003\022,\n\'BOTARENA_CO"
  "UNTERATTACK_ALREADY_FINISHED\020\325\003\022\023\n\016SHOP_"
  "NOT_FOUND\020\340\003\022\026\n\021PRODUCT_NOT_FOUND\020\341\003\022\"\n\035"
  "REACHED_PRODUCT_MAX_BUY_LIMIT\020\342\003\022#\n\036BUY_"
  "PRODUCT_CONDITION_NOT_PASS\020\343\003\022#\n\036BUY_PRO"
  "DUCT_CONSUME_NOT_ENOUGH\020\344\003\022#\n\036REACHED_PR"
  "ODUCT_ONCE_BUY_LIMIT\020\345\003\022\026\n\021MAX_REFRESH_L"
  "IMIT\020\346\003\022\026\n\021PRODUCT_IS_LOCKED\020\347\003\022!\n\034WITCH"
  "_SKILL_INVALID_OPT_TYPE\020\352\003\022\037\n\032WITCH_SKIL"
  "L_ROW_NOT_EXISTS\020\353\003\022!\n\034WITCH_SKILL_INVAL"
  "ID_SKILL_ID\020\354\003\022 \n\033WITCH_SKILL_MAX_SKILL_"
  "LEVEL\020\355\003\022\035\n\030RECHARGE_PRODUCT_INVALID\020\364\003\022"
  "\036\n\031RECHARGE_REPETITIVE_ORDER\020\365\003\022!\n\034RECHA"
  "RGE_APP_ORDER_NOT_EXIST\020\366\003\022\034\n\027RECHARGE_A"
  "PP_ID_INVALID\020\367\003\022\036\n\031WITCH_PNEUMA_MAX_BAG"
  "_SIZE\020\376\003\022\033\n\026WITCH_PNEUMA_NOT_EXIST\020\377\003\022\"\n"
  "\035WITCH_PNEUMA_INVALID_OPT_TYPE\020\200\004\022$\n\037WIT"
  "CH_PNEUMA_ALREADY_UNEQUIPPED\020\201\004\022\033\n\026WITCH"
  "_PNEUMA_UNMATCHED\020\202\004\022\"\n\035WITCH_PNEUMA_ALR"
  "EADY_EQUIPPED\020\203\004\022\033\n\026WITCH_PNEUMA_MAX_LEV"
  "EL\020\204\004\022#\n\036WITCH_PNEUMA_INVALID_GUID_LIST\020"
  "\205\004\022&\n!WITCH_PNEUMA_INVALID_EXPAND_COUNT\020"
  "\206\004\022\035\n\030ENDLESS_TOWER_INVALID_ID\020\222\004\022\034\n\027END"
  "LESS_TOWER_MAX_LAYER\020\223\004\022&\n!ENDLESS_TOWER"
  "_INVALID_SWEEP_COUNT\020\224\004\022#\n\036ENDLESS_TOWER"
  "_NO_SETTLED_LAYER\020\225\004\022\033\n\026ENDLESS_TOWER_NO"
  "T_OPEN\020\226\004\022\031\n\024CHAT_NO_REPORT_COUNT\020\246\004\022\031\n\024"
  "CHAT_API_CALL_FAILED\020\247\004\022&\n!CHAT_REGISTER"
  "_SDK_ACCOUNT_TIMEOUT\020\250\004\022$\n\037CHAT_REGISTER"
  "_SDK_ACCOUNT_EXIST\020\251\004\022%\n CHAT_REGISTER_S"
  "DK_ACCOUNT_FAILED\020\252\004\022!\n\034CHAT_CREATE_CHAT"
  "ROOM_TIMEOUT\020\253\004\022 \n\033CHAT_CREATE_CHATROOM_"
  "FAILED\020\254\004\022\"\n\035CHAT_CREATE_CHAT_GROUP_FAIL"
  "ED\020\255\004\022\"\n\035CHAT_DELETE_CHAT_GROUP_FAILED\020\256"
  "\004\022$\n\037CHAT_TRANSFER_CHAT_GROUP_FAILED\020\257\004\022"
  "$\n\037CHAT_ADD_CHAT_GROUP_USER_FAILED\020\260\004\022\'\n"
  "\"CHAT_DELETE_CHAT_GROUP_USER_FAILED\020\261\004\022\035"
  "\n\030CHAT_BUBBLE_NOT_UNLOCKED\020\262\004\022!\n\034CHAT_BU"
  "BBLE_ALREADY_UNLOCKED\020\263\004\022#\n\036CHAT_BUBBLE_"
  "CANT_MANUAL_UNLOCK\020\264\004\022%\n CHAT_MEME_GROUP"
  "_ALREADY_UNLOCKED\020\265\004\022\'\n\"CHAT_MEME_GROUP_"
  "CANT_MANUAL_UNLOCK\020\266\004\022\037\n\032CHAT_MEME_ALREA"
  "DY_UNLOCKED\020\267\004\022!\n\034CHAT_MEME_CANT_MANUAL_"
  "UNLOCK\020\270\004\022\024\n\017CHAT_NOT_FRIEND\020\271\004\022\034\n\027CHAT_"
  "IN_FORBIDDEN_STATE\020\272\004\022\031\n\024FRIEND_REFRESH_"
  "IN_CD\020\330\004\022\026\n\021FRIEND_FIND_IN_CD\020\331\004\022\027\n\022FRIE"
  "ND_ALREADY_ADD\020\332\004\022\033\n\026FRIEND_ALREADY_APPL"
  "IED\020\333\004\022\036\n\031FRIEND_TARGET_NOT_APPLIED\020\334\004\022\035"
  "\n\030FRIEND_MAX_APPLY_LIMITED\020\335\004\022\027\n\022FRIEND_"
  "MAX_LIMITED\020\336\004\022\036\n\031FRIEND_TARGET_MAX_LIMI"
  "TED\020\337\004\022!\n\034FRIEND_MAX_BLACKLIST_LIMITED\020\340"
  "\004\022\035\n\030FRIEND_TARGET_NOT_FRIEND\020\341\004\022\030\n\023FRIE"
  "ND_IN_BLACKLIST\020\342\004\022\037\n\032FRIEND_TARGET_IN_B"
  "LACKLIST\020\343\004\022\024\n\017ITEM_NOT_ENOUGH\020\350\007\022\030\n\023RES"
  "OURCE_NOT_ENOUGH\020\351\007\022\024\n\017ITEM_ID_INVALID\020\352"
  "\007\022\031\n\024CONDITION_NOT_PASSED\020\353\007\022#\n\036COMMUNIT"
  "Y_ALREADY_IN_COMMUNITY\020\260\t\022\032\n\025COMMUNITY_S"
  "TILL_IN_CD\020\261\t\022\033\n\026COMMUNITY_INVALID_NAME\020"
  "\262\t\022\"\n\035COMMUNITY_INVALID_NAME_LENGTH\020\263\t\022!"
  "\n\034COMMUNITY_INVALID_DIGIT_NAME\020\264\t\022\"\n\035COM"
  "MUNITY_INVALID_DECLARATION\020\265\t\022)\n$COMMUNI"
  "TY_INVALID_DECLARATION_LENGTH\020\266\t\022\033\n\026COMM"
  "UNITY_INVALID_FLAG\020\267\t\022\033\n\026COMMUNITY_INVAL"
  "ID_ICON\020\270\t\022\032\n\025COMMUNITY_NAME_EXISTS\020\271\t\022#"
  "\n\036COMMUNITY_INVALID_APPROVE_TYPE\020\272\t\022(\n#C"
  "OMMUNITY_INVALID_LEVEL_RESTRICTION\020\273\t\022\033\n"
  "\026COMMUNITY_SEARCH_IN_CD\020\274\t\022\031\n\024COMMUNITY_"
  "NOT_EXISTS\020\275\t\022\036\n\031COMMUNITY_INVALID_PAGE_"
  "NO\020\276\t\022\037\n\032COMMUNITY_QUICK_JOIN_IN_CD\020\277\t\022#"
  "\n\036COMMUNITY_QUICK_JOIN_TRY_AGAIN\020\300\t\022 \n\033C"
  "OMMUNITY_LEVEL_RESTRICTION\020\301\t\022\035\n\030COMMUNI"
  "TY_MEMBER_IS_FULL\020\302\t\022\037\n\032COMMUNITY_NOT_IN"
  "_COMMUNITY\020\303\t\022!\n\034COMMUNITY_PERMISSION_DE"
  "FINED\020\304\t\022\"\n\035COMMUNITY_MAX_DAILY_OPT_LIMI"
  "T\020\305\t\022#\n\036COMMUNITY_TARGET_IS_NOT_MEMBER\020\306"
  "\t\022 \n\033COMMUNITY_TARGET_IS_MANAGER\020\307\t\022\037\n\032C"
  "OMMUNITY_TARGET_IS_MEMBER\020\310\t\022)\n$COMMUNIT"
  "Y_TARGET_NOT_IN_APPLIED_LIST\020\311\t\022\033\n\026COMMU"
  "NITY_UNMATCHED_ID\020\312\t\022\036\n\031COMMUNITY_ALREAD"
  "Y_SIGN_IN\020\313\t*\273a\n\nEGameMsgID\022\n\n\006UNKNOW\020\000\022"
  "\020\n\014EVENT_RESULT\020\001\022\023\n\017EVENT_TRANSPORT\020\002\022\020"
  "\n\014CLOSE_SOCKET\020\003\022\022\n\016STS_REGISTERED\020\004\022\023\n\017"
  "STS_UNREGISTERD\020\005\022\017\n\013STS_REFRESH\020\006\022\025\n\021ST"
  "S_SERVICE_ROUTE\020\007\022\020\n\014STS_NET_INFO\020\010\022\022\n\016S"
  "TS_HEART_BEAT\020\t\022\030\n\024STS_SYNC_WORLD_STATE\020"
  "\n\022\016\n\tREQ_LOGIN\020\310\001\022\016\n\tACK_LOGIN\020\311\001\022\017\n\nREQ"
  "_LOGOUT\020\312\001\022\026\n\021REQ_CONNECT_WORLD\020\322\001\022\026\n\021AC"
  "K_CONNECT_WORLD\020\323\001\022\023\n\016REQ_VERIFY_JWT\020\324\001\022"
  "\023\n\016ACK_VERIFY_JWT\020\325\001\022\030\n\023REQ_KICK_FROM_WO"
  "RLD\020\326\001\022\030\n\023ACK_KICK_FROM_WORLD\020\327\001\022\023\n\016REQ_"
  "ENTER_GAME\020\334\001\022\031\n\024ACK_ENTER_GAME_BEGIN\020\335\001"
  "\022\027\n\022ACK_ENTER_GAME_END\020\336\001\022\024\n\017REQ_PLAYER_"
  "LITE\020\337\001\022\024\n\017ACK_PLAYER_LITE\020\340\001\022\036\n\031REQ_UPD"
  "ATE_ACCOUNT_PLAYER\020\341\001\022\'\n\"REQ_UPDATE_ACCO"
  "UNT_LAST_LOGIN_INFO\020\342\001\022\031\n\024REQ_LOAD_PLAYE"
  "R_DATA\020\346\001\022\031\n\024ACK_LOAD_PLAYER_DATA\020\347\001\022\031\n\024"
  "REQ_SAVE_PLAYER_DATA\020\350\001\022\031\n\024ACK_SAVE_PLAY"
  "ER_DATA\020\351\001\022\023\n\016REQ_LEAVE_GAME\020\374\001\022\023\n\016ACK_L"
  "EAVE_GAME\020\375\001\022\023\n\016REQ_SWAP_SCENE\020\376\001\022\031\n\024ACK"
  "_SWAP_SCENE_BEGIN\020\377\001\022\027\n\022ACK_SWAP_SCENE_E"
  "ND\020\200\002\022\032\n\025ACK_SWAP_SCENE_NOTIFY\020\201\002\022\022\n\rREQ"
  "_RECONNECT\020\204\002\022\022\n\rACK_RECONNECT\020\205\002\022\025\n\020ACK"
  "_OBJECT_ENTRY\020\254\002\022\025\n\020ACK_OBJECT_LEAVE\020\255\002\022"
  "\036\n\031ACK_OBJECT_PROPERTY_ENTRY\020\256\002\022\034\n\027ACK_O"
  "BJECT_RECORD_ENTRY\020\257\002\022\025\n\020ACK_PROPERTY_IN"
  "T\020\266\002\022\027\n\022ACK_PROPERTY_FLOAT\020\267\002\022\030\n\023ACK_PRO"
  "PERTY_STRING\020\270\002\022\030\n\023ACK_PROPERTY_OBJECT\020\271"
  "\002\022\031\n\024ACK_PROPERTY_VECTOR2\020\272\002\022\031\n\024ACK_PROP"
  "ERTY_VECTOR3\020\273\002\022\027\n\022ACK_PROPERTY_CLEAR\020\274\002"
  "\022\020\n\013ACK_ADD_ROW\020\300\002\022\023\n\016ACK_REMOVE_ROW\020\301\002\022"
  "\021\n\014ACK_SWAP_ROW\020\302\002\022\023\n\016ACK_RECORD_INT\020\303\002\022"
  "\025\n\020ACK_RECORD_FLOAT\020\304\002\022\026\n\021ACK_RECORD_STR"
  "ING\020\305\002\022\026\n\021ACK_RECORD_OBJECT\020\306\002\022\027\n\022ACK_RE"
  "CORD_VECTOR2\020\307\002\022\027\n\022ACK_RECORD_VECTOR3\020\310\002"
  "\022\025\n\020ACK_RECORD_CLEAR\020\311\002\022\024\n\017ACK_RECORD_SO"
  "RT\020\312\002\022\026\n\021ACK_DATA_FINISHED\020\324\002\022\026\n\021ACK_ONL"
  "INE_NOTIFY\020\220\003\022\027\n\022ACK_OFFLINE_NOTIFY\020\221\003\022\023"
  "\n\016REQ_HEART_BEAT\020\232\003\022\023\n\016ACK_HEART_BEAT\020\233\003"
  "\022\021\n\014REQ_LAG_TEST\020\234\003\022\021\n\014ACK_LAG_TEST\020\235\003\022\036"
  "\n\031REQ_SET_GAME_SERVER_STATE\020\244\003\022\036\n\031ACK_SE"
  "T_GAME_SERVER_STATE\020\245\003\022\027\n\022REQ_REFRESH_CO"
  "NFIG\020\246\003\022!\n\034REQ_PUSH_CLIENT_INTO_QUEUEUP\020"
  "\247\003\022!\n\034ACK_PUSH_CLIENT_INTO_QUEUEUP\020\250\003\022)\n"
  "$REQ_QUEUEUP_GET_CUR_WORLD_SUIT_PROXY\020\251\003"
  "\022)\n$ACK_QUEUEUP_GET_CUR_WORLD_SUIT_PROXY"
  "\020\252\003\022\034\n\027SYNC_QUEUEUP_REG_STATUS\020\253\003\022\034\n\027REQ"
  "_KICK_CLIENTS_RANDOM\020\254\003\022(\n#REQ_UPDATE_PL"
  "AYER_LAST_HEARTBEAT_TS\020\255\003\022(\n#SYNC_QUEUE_"
  "UP_USER_CANCEL_OPERATION\020\256\003\022\036\n\031ACK_WORLD"
  "_PLAYER_HAS_ROLE\020\257\003\022!\n\034SYNC_PLAYER_PROPE"
  "RTIES_CACHE\020\260\003\022!\n\034LOAD_PLAYER_PROPERTIES"
  "_CACHE\020\261\003\022\036\n\031LOAD_PLAYER_RECORDS_CACHE\020\262"
  "\003\022\"\n\035SYNC_PLAYER_RECORDS_CACHE_ADD\020\263\003\022%\n"
  " SYNC_PLAYER_RECORDS_CACHE_UPDATE\020\264\003\022\"\n\035"
  "SYNC_PLAYER_RECORDS_CACHE_DEL\020\265\003\022#\n\036SYNC"
  "_PLAYER_RECORDS_CACHE_SWAP\020\266\003\022\017\n\nREQ_REC"
  "ORD\020\350\007\022\017\n\nACK_RECORD\020\351\007\022\032\n\025REQ_CREATE_KC"
  "P_OBJECT\020\352\007\022\032\n\025ACK_CREATE_KCP_OBJECT\020\353\007\022"
  "!\n\034REQ_ESTABLISH_KCP_CONNECTION\020\354\007\022!\n\034AC"
  "K_ESTABLISH_KCP_CONNECTION\020\355\007\022\027\n\022REQ_KCP"
  "_HEART_BEAT\020\356\007\022\027\n\022ACK_KCP_HEART_BEAT\020\357\007\022"
  "\026\n\021REQ_COLLECT_WITCH\020\360\007\022\026\n\021ACK_COLLECT_W"
  "ITCH\020\361\007\022\031\n\024REQ_INIT_PLAYER_NAME\020\362\007\022\031\n\024AC"
  "K_INIT_PLAYER_NAME\020\363\007\022\026\n\021REQ_UPDATE_MODU"
  "LE\020\364\007\022\026\n\021ACK_UPDATE_MODULE\020\365\007\022\027\n\022REQ_CHA"
  "PTER_TIP_OK\020\366\007\022\027\n\022ACK_CHAPTER_TIP_OK\020\367\007\022"
  "\022\n\rREQ_BUY_POWER\020\370\007\022\022\n\rACK_BUY_POWER\020\371\007\022"
  "\026\n\021REQ_COLLEGE_DRAMA\020\372\007\022\026\n\021ACK_COLLEGE_D"
  "RAMA\020\373\007\022\027\n\022REQ_COLLEGE_REWARD\020\374\007\022\027\n\022ACK_"
  "COLLEGE_REWARD\020\375\007\022\034\n\027REQ_COLLEGE_ACTION_"
  "TASK\020\376\007\022\034\n\027ACK_COLLEGE_ACTION_TASK\020\377\007\022\037\n"
  "\032REQ_COLLEGE_COUNTDOWN_TASK\020\200\010\022\037\n\032ACK_CO"
  "LLEGE_COUNTDOWN_TASK\020\201\010\022\023\n\016REQ_START_EXA"
  "M\020\202\010\022\023\n\016ACK_START_EXAM\020\203\010\022\027\n\022REQ_COLLEGE"
  "_ANSWER\020\204\010\022\027\n\022ACK_COLLEGE_ANSWER\020\205\010\022\032\n\025R"
  "EQ_COLLEGE_EXAM_EXIT\020\206\010\022\032\n\025ACK_COLLEGE_E"
  "XAM_EXIT\020\207\010\022\033\n\026COMMON_GET_REWARD_INFO\020\210\010"
  "\022\036\n\031SYNC_PLAYER_LEVEL_RANKING\020\211\010\022$\n\037REQ_"
  "EXPLORE_UPDATE_NODE_POSTION\020\221\010\022$\n\037ACK_EX"
  "PLORE_UPDATE_NODE_POSTION\020\222\010\022*\n%REQ_GET_"
  "EXPLORE_AREA_PROGRESS_REWARDS\020\223\010\022*\n%ACK_"
  "GET_EXPLORE_AREA_PROGRESS_REWARDS\020\224\010\022&\n!"
  "REQ_SWEEP_EXPLORE_THREE_STAR_NODE\020\225\010\022&\n!"
  "ACK_SWEEP_EXPLORE_THREE_STAR_NODE\020\226\010\022%\n "
  "REQ_GET_EXPLORE_MAP_STAR_REWARDS\020\227\010\022%\n A"
  "CK_GET_EXPLORE_MAP_STAR_REWARDS\020\230\010\022,\n\'RE"
  "Q_GET_EXPLORE_MAP_BRANCH_LINE_REWARDS\020\231\010"
  "\022,\n\'ACK_GET_EXPLORE_MAP_BRANCH_LINE_REWA"
  "RDS\020\232\010\022*\n%REQ_UPGRADE_EXPLORE_GUIDER_FRI"
  "ENDSHIP\020\233\010\022*\n%ACK_UPGRADE_EXPLORE_GUIDER"
  "_FRIENDSHIP\020\234\010\022\033\n\026REQ_GET_APPOINT_REWARD"
  "\020\244\010\022\033\n\026ACK_GET_APPOINT_REWARD\020\245\010\022\034\n\027REQ_"
  "SWITCH_APPOINT_AREA\020\246\010\022\034\n\027ACK_SWITCH_APP"
  "OINT_AREA\020\247\010\022\025\n\020REQ_START_AFFAIR\020\250\010\022\025\n\020A"
  "CK_START_AFFAIR\020\251\010\022\031\n\024REQ_TERMINATE_AFFA"
  "IR\020\252\010\022\031\n\024ACK_TERMINATE_AFFAIR\020\253\010\022\032\n\025REQ_"
  "GET_AFFAIR_REWARD\020\254\010\022\032\n\025ACK_GET_AFFAIR_R"
  "EWARD\020\255\010\022\026\n\021REQ_DELETE_AFFAIR\020\256\010\022\026\n\021ACK_"
  "DELETE_AFFAIR\020\257\010\022\026\n\021REQ_START_APPOINT\020\260\010"
  "\022\026\n\021ACK_START_APPOINT\020\261\010\022 \n\033REQ_HOUSEKEE"
  "PER_INIT_SIGNIN\020\270\010\022 \n\033ACK_HOUSEKEEPER_IN"
  "IT_SIGNIN\020\271\010\022$\n\037REQ_HOUSEKEEPER_FINISHED"
  "_SIGNIN\020\272\010\022$\n\037ACK_HOUSEKEEPER_FINISHED_S"
  "IGNIN\020\273\010\022\031\n\024REQ_SET_HOUSE_KEEPER\020\274\010\022\031\n\024A"
  "CK_SET_HOUSE_KEEPER\020\275\010\022!\n\034REQ_SET_HOUSE_"
  "KEEPER_SKIN_ID\020\276\010\022!\n\034ACK_SET_HOUSE_KEEPE"
  "R_SKIN_ID\020\277\010\022\034\n\027REQ_DELETE_READED_MAILS\020"
  "\303\010\022\034\n\027ACK_DELETE_READED_MAILS\020\304\010\022\023\n\016REQ_"
  "READ_MAILS\020\305\010\022\023\n\016ACK_READ_MAILS\020\306\010\022\"\n\035RE"
  "Q_WORLD_SEND_MAIL_TO_PLAYER\020\307\010\022\"\n\035ACK_WO"
  "RLD_SEND_MAIL_TO_PLAYER\020\310\010\022(\n#SYNC_ADD_P"
  "RE_SEND_ALL_PLAYERS_MAILS\020\311\010\022(\n#SYNC_DEL"
  "_PRE_SEND_ALL_PLAYERS_MAILS\020\312\010\022#\n\036SYNC_A"
  "DD_PRE_SEND_PLAYER_MAILS\020\313\010\022#\n\036SYNC_DEL_"
  "PRE_SEND_PLAYER_MAILS\020\354\016\022\036\n\031SYNC_PLAYER_"
  "MAIL_SESSIONS\020\355\016\022\024\n\017ACK_BATTLE_INFO\020\314\010\022\027"
  "\n\022ACK_BATTLE_PK_INFO\020\315\010\022\026\n\021REQ_BATTLE_AC"
  "TION\020\316\010\022\026\n\021ACK_BATTLE_ACTION\020\317\010\022\030\n\023REQ_B"
  "ATTLE_PULL_MSG\020\320\010\022\030\n\023ACK_BATTLE_PULL_MSG"
  "\020\321\010\022\030\n\023ACK_BATTLE_END_INFO\020\322\010\022 \n\033REQ_BAT"
  "TLE_TOGGLE_AUTO_MODE\020\323\010\022 \n\033ACK_BATTLE_TO"
  "GGLE_AUTO_MODE\020\324\010\022\'\n\"REQ_BATTLE_UPDATE_E"
  "NTITY_AUTO_MODE\020\325\010\022\'\n\"ACK_BATTLE_UPDATE_"
  "ENTITY_AUTO_MODE\020\326\010\022\037\n\032REQ_BATTLE_SET_PR"
  "IO_TARGET\020\327\010\022\037\n\032ACK_BATTLE_SET_PRIO_TARG"
  "ET\020\330\010\022\036\n\031REQ_BATTLE_ADJ_WITCH_TEAM\020\331\010\022\036\n"
  "\031ACK_BATTLE_ADJ_WITCH_TEAM\020\332\010\022&\n!REQ_BAT"
  "TLE_CHANGE_WITCH_TEAM_NAME\020\333\010\022&\n!ACK_BAT"
  "TLE_CHANGE_WITCH_TEAM_NAME\020\334\010\022 \n\033REQ_BAT"
  "TLE_RESET_WITCH_TEAM\020\335\010\022 \n\033ACK_BATTLE_RE"
  "SET_WITCH_TEAM\020\336\010\022\'\n\"REQ_BATTLE_QUICK_CO"
  "NFIG_WITCH_TEAM\020\337\010\022\'\n\"ACK_BATTLE_QUICK_C"
  "ONFIG_WITCH_TEAM\020\340\010\022\036\n\031REQ_BATTLE_BUY_WI"
  "TCH_TEAM\020\341\010\022\036\n\031ACK_BATTLE_BUY_WITCH_TEAM"
  "\020\342\010\022\024\n\017REQ_TEST_BATTLE\020\260\t\022\024\n\017ACK_TEST_BA"
  "TTLE\020\261\t\022\025\n\020REQ_ENTER_BATTLE\020\262\t\022\025\n\020ACK_EN"
  "TER_BATTLE\020\263\t\022\035\n\030REQ_BATTLE_PREPARED_INF"
  "O\020\264\t\022\035\n\030ACK_BATTLE_PREPARED_INFO\020\265\t\022\025\n\020R"
  "EQ_LEAVE_BATTLE\020\266\t\022\025\n\020ACK_LEAVE_BATTLE\020\267"
  "\t\022\032\n\025REQ_CONTINUOUS_BATTLE\020\270\t\022\032\n\025ACK_CON"
  "TINUOUS_BATTLE\020\271\t\022\024\n\017REQ_REPLAY_DATA\020\272\t\022"
  "\024\n\017ACK_REPLAY_DATA\020\273\t\022!\n\034REQ_SET_SYSTEM_"
  "FUNCTION_FLAG\020\305\t\022!\n\034ACK_SET_SYSTEM_FUNCT"
  "ION_FLAG\020\306\t\022 \n\033SYNC_SYSTEM_FUNCTION_UNLO"
  "CK\020\307\t\022\034\n\027REQ_SEND_GIFT_FOR_WITCH\020\224\n\022\034\n\027A"
  "CK_SEND_GIFT_FOR_WITCH\020\225\n\022\035\n\030REQ_USE_MAG"
  "ICAL_MEDICINE\020\226\n\022\035\n\030ACK_USE_MAGICAL_MEDI"
  "CINE\020\227\n\022\032\n\025REQ_UNLOCK_WITCH_SKIN\020\230\n\022\032\n\025A"
  "CK_UNLOCK_WITCH_SKIN\020\231\n\022\034\n\027REQ_WITCH_STA"
  "R_LEVEL_UP\020\232\n\022\034\n\027ACK_WITCH_STAR_LEVEL_UP"
  "\020\233\n\022\022\n\rREQ_DRAW_CARD\020\234\n\022\022\n\rACK_DRAW_CARD"
  "\020\235\n\022!\n\034REQ_WITCH_KNOWLEDGE_LEVEL_UP\020\236\n\022!"
  "\n\034ACK_WITCH_KNOWLEDGE_LEVEL_UP\020\237\n\022%\n REQ"
  "_EXPAND_WITCH_PNEUMA_BAG_SIZE\020\240\n\022%\n ACK_"
  "EXPAND_WITCH_PNEUMA_BAG_SIZE\020\241\n\022\031\n\024REQ_W"
  "ITCH_PNEUMA_OPT\020\242\n\022\031\n\024ACK_WITCH_PNEUMA_O"
  "PT\020\243\n\022\035\n\030REQ_WITCH_PNEUMA_ENHANCE\020\244\n\022\035\n\030"
  "ACK_WITCH_PNEUMA_ENHANCE\020\245\n\022\037\n\032REQ_WITCH"
  "_PNEUMA_DECOMPOSE\020\246\n\022\037\n\032ACK_WITCH_PNEUMA"
  "_DECOMPOSE\020\247\n\022\035\n\030REQ_WITCH_SKILL_LEVEL_U"
  "P\020\250\n\022\035\n\030ACK_WITCH_SKILL_LEVEL_UP\020\251\n\022\034\n\027R"
  "EQ_SWEEP_ENDLESS_TOWER\020\262\n\022\034\n\027ACK_SWEEP_E"
  "NDLESS_TOWER\020\263\n\022\024\n\017REQ_FRIEND_LIST\020\306\n\022\024\n"
  "\017ACK_FRIEND_LIST\020\307\n\022\034\n\027REQ_APPLIED_FRIEN"
  "D_LIST\020\310\n\022\034\n\027ACK_APPLIED_FRIEND_LIST\020\311\n\022"
  "\023\n\016REQ_ADD_FRIEND\020\312\n\022\023\n\016ACK_ADD_FRIEND\020\313"
  "\n\022\035\n\030REQ_DEAL_WITH_ADD_FRIEND\020\314\n\022\035\n\030ACK_"
  "DEAL_WITH_ADD_FRIEND\020\315\n\022\023\n\016REQ_DEL_FRIEN"
  "D\020\316\n\022\023\n\016ACK_DEL_FRIEND\020\317\n\022\022\n\rREQ_BLACKLI"
  "ST\020\320\n\022\022\n\rACK_BLACKLIST\020\321\n\022\026\n\021REQ_BLACKLI"
  "ST_OPT\020\322\n\022\026\n\021ACK_BLACKLIST_OPT\020\323\n\022 \n\033REQ"
  "_RECOMMENDED_FRIEND_LIST\020\324\n\022 \n\033ACK_RECOM"
  "MENDED_FRIEND_LIST\020\325\n\022\033\n\026REQ_FRIEND_COLL"
  "ECT_OPT\020\326\n\022\033\n\026ACK_FRIEND_COLLECT_OPT\020\327\n\022"
  "\024\n\017REQ_FIND_PLAYER\020\330\n\022\024\n\017ACK_FIND_PLAYER"
  "\020\331\n\022%\n REQ_GET_PNEUMAISLAND_STAR_REWARD\020"
  "\332\n\022%\n ACK_GET_PNEUMAISLAND_STAR_REWARD\020\333"
  "\n\022\'\n\"REQ_UPDATE_PNEUMAISLAND_SHOW_STATE\020"
  "\334\n\022\'\n\"ACK_UPDATE_PNEUMAISLAND_SHOW_STATE"
  "\020\335\n\022+\n&REQ_UPDATE_PNEUMA_AUTO_DECOMPOSE_"
  "STATE\020\336\n\022+\n&ACK_UPDATE_PNEUMA_AUTO_DECOM"
  "POSE_STATE\020\337\n\022\'\n\"REQ_UPDATE_PNEUMA_DECOM"
  "POSE_SCHEME\020\340\n\022\'\n\"ACK_UPDATE_PNEUMA_DECO"
  "MPOSE_SCHEME\020\341\n\022!\n\034REQ_BLACKMART_COMMODI"
  "TY_LIST\020\356\n\022!\n\034ACK_BLACKMART_COMMODITY_LI"
  "ST\020\357\n\022)\n$REQ_REFRESH_BLACKMART_COMMODITY"
  "_LIST\020\360\n\022)\n$ACK_REFRESH_BLACKMART_COMMOD"
  "ITY_LIST\020\361\n\022 \n\033REQ_BUY_BLACKMART_COMMODI"
  "TY\020\362\n\022 \n\033ACK_BUY_BLACKMART_COMMODITY\020\363\n\022"
  "%\n SYNC_BLACKMART_COMMODITY_UPDATED\020\364\n\022!"
  "\n\034REQ_ACTIVE_MISSION_OPERATION\020\370\n\022!\n\034ACK"
  "_ACTIVE_MISSION_OPERATION\020\371\n\022\"\n\035REQ_GET_"
  "ACTIVE_MISSION_REWARD\020\372\n\022\"\n\035ACK_GET_ACTI"
  "VE_MISSION_REWARD\020\373\n\022\025\n\020REQ_CREATE_ORDER"
  "\020\202\013\022\025\n\020ACK_CREATE_ORDER\020\203\013\022\032\n\025REQ_CALLBA"
  "CK_RECHARGE\020\204\013\022\032\n\025ACK_CALLBACK_RECHARGE\020"
  "\205\013\022$\n\037SYNC_PLAYER_HONOR_POINT_CHANGED\020\252\013"
  "\022$\n\037SAVE_PLAYER_HONOR_POINT_RANKING\020\253\013\022\'"
  "\n\"SYNC_PLAYER_STRATEGY_POINT_CHANGED\020\254\013\022"
  "\'\n\"SAVE_PLAYER_STRATEGY_POINT_RANKING\020\255\013"
  "\022\030\n\023SYNC_BOTARENA_STATE\020\256\013\022 \n\033SYNC_BOTAR"
  "ENA_STAGE_SESSION\020\257\013\022\037\n\032SAVE_PLAYER_CHAL"
  "LENGE_LIST\020\260\013\022!\n\034UPDATE_PLAYER_CHALLENGE"
  "_ITEM\020\261\013\022\033\n\026ADD_PLAYER_REPLAY_ITEM\020\262\013\022\033\n"
  "\026DEL_PLAYER_REPLAY_ITEM\020\263\013\022\036\n\031UPDATE_PLA"
  "YER_REPLAY_ITEM\020\264\013\022\"\n\035SYNC_BOTARENA_BATT"
  "LE_IS_READY\020\265\013\022(\n#SYNC_DEFENSIVE_PLAYER_"
  "BATTLE_REWARD\020\266\013\022%\n SYNC_BOTARENA_BATTLE"
  "_SETTLE_DATA\020\267\013\022&\n!SYNC_BOTARENA_BATTLE_"
  "REPLAY_DATAS\020\270\013\022&\n!SAVE_BOTARENA_BATTLE_"
  "REPLAY_DATAS\020\271\013\022%\n DEL_BOTARENA_BATTLE_R"
  "EPLAY_DATAS\020\272\013\022)\n$DEL_ALL_BOTARENA_BATTL"
  "E_REPLAY_DATAS\020\273\013\022\037\n\032DEL_ALL_PLAYER_REPL"
  "AY_ITEM\020\274\013\022\"\n\035DEL_ALL_PLAYER_CHALLENGE_I"
  "TEM\020\275\013\022\'\n\"REQ_GET_PLAYER_HONOR_POINT_RAN"
  "KING\020\276\013\022\'\n\"ACK_GET_PLAYER_HONOR_POINT_RA"
  "NKING\020\277\013\022*\n%REQ_GET_PLAYER_STRATEGY_POIN"
  "T_RANKING\020\300\013\022*\n%ACK_GET_PLAYER_STRATEGY_"
  "POINT_RANKING\020\301\013\022+\n&REQ_GET_PLAYER_BOTAR"
  "ENA_CHALLENGE_LIST\020\302\013\022+\n&ACK_GET_PLAYER_"
  "BOTARENA_CHALLENGE_LIST\020\303\013\022/\n*REQ_REFRES"
  "H_PLAYER_BOTARENA_CHALLENGE_LIST\020\304\013\022/\n*A"
  "CK_REFRESH_PLAYER_BOTARENA_CHALLENGE_LIS"
  "T\020\305\013\022$\n\037REQ_ADJ_BOTARENA_DEFENSIVE_TEAM\020"
  "\306\013\022$\n\037ACK_ADJ_BOTARENA_DEFENSIVE_TEAM\020\307\013"
  "\022&\n!REQ_RESET_BOTARENA_DEFENSIVE_TEAM\020\310\013"
  "\022&\n!ACK_RESET_BOTARENA_DEFENSIVE_TEAM\020\311\013"
  "\022-\n(REQ_QUICK_CONFIG_BOTARENA_DEFENSIVE_"
  "TEAM\020\312\013\022-\n(ACK_QUICK_CONFIG_BOTARENA_DEF"
  "ENSIVE_TEAM\020\313\013\022$\n\037REQ_GET_BOTARENA_MAIN_"
  "PAGE_DATA\020\314\013\022$\n\037ACK_GET_BOTARENA_MAIN_PA"
  "GE_DATA\020\315\013\022\031\n\024REQ_BUY_SHABOW_TOKEN\020\316\013\022\031\n"
  "\024ACK_BUY_SHABOW_TOKEN\020\317\013\022#\n\036REQ_CLICK_BO"
  "TARENA_PROMPT_FORM\020\320\013\022#\n\036ACK_CLICK_BOTAR"
  "ENA_PROMPT_FORM\020\321\013\022!\n\034REQ_GET_BOTARENA_R"
  "EPLAY_LIST\020\322\013\022!\n\034ACK_GET_BOTARENA_REPLAY"
  "_LIST\020\323\013\022\037\n\032REQ_REPLAY_BOTARENA_BATTLE\020\324"
  "\013\022\037\n\032ACK_REPLAY_BOTARENA_BATTLE\020\325\013\022\034\n\027AD"
  "D_PLAYER_SHOP_RECEIPT\020\334\013\022\034\n\027UPD_PLAYER_S"
  "HOP_RECEIPT\020\335\013\022\034\n\027DEL_PLAYER_SHOP_RECEIP"
  "T\020\336\013\022\035\n\030DEL_PLAYER_SHOP_RECEIPTS\020\337\013\022\032\n\025R"
  "EQ_GET_SHOP_PRODUCTS\020\346\013\022\032\n\025ACK_GET_SHOP_"
  "PRODUCTS\020\347\013\022\024\n\017REQ_BUY_PRODUCT\020\350\013\022\024\n\017ACK"
  "_BUY_PRODUCT\020\351\013\022\031\n\024REQ_CREATE_COMMUNITY\020"
  "\300\014\022\031\n\024ACK_CREATE_COMMUNITY\020\301\014\022\031\n\024REQ_SEA"
  "RCH_COMMUNITY\020\302\014\022\031\n\024ACK_SEARCH_COMMUNITY"
  "\020\303\014\022\030\n\023REQ_QUERY_COMMUNITY\020\304\014\022\030\n\023ACK_QUE"
  "RY_COMMUNITY\020\305\014\022!\n\034REQ_SPECIFIED_COMMUNI"
  "TY_PAGE\020\306\014\022!\n\034ACK_SPECIFIED_COMMUNITY_PA"
  "GE\020\307\014\022\035\n\030REQ_QUICK_JOIN_COMMUNITY\020\310\014\022\035\n\030"
  "ACK_QUICK_JOIN_COMMUNITY\020\311\014\022\035\n\030REQ_APPLY"
  "_JOIN_COMMUNITY\020\312\014\022\035\n\030ACK_APPLY_JOIN_COM"
  "MUNITY\020\313\014\022\036\n\031REQ_CANCEL_JOIN_COMMUNITY\020\314"
  "\014\022\036\n\031ACK_CANCEL_JOIN_COMMUNITY\020\315\014\022\037\n\032REQ"
  "_APPLIED_COMMUNITY_LIST\020\316\014\022\037\n\032ACK_APPLIE"
  "D_COMMUNITY_LIST\020\317\014\022$\n\037REQ_MODIFY_NAME_A"
  "ND_DECLARATION\020\320\014\022$\n\037ACK_MODIFY_NAME_AND"
  "_DECLARATION\020\321\014\022\035\n\030REQ_MODIFY_FLAG_AND_I"
  "CON\020\322\014\022\035\n\030ACK_MODIFY_FLAG_AND_ICON\020\323\014\022\036\n"
  "\031REQ_MODIFY_APPROVED_RULES\020\324\014\022\036\n\031ACK_MOD"
  "IFY_APPROVED_RULES\020\325\014\022&\n!REQ_PROMOTION_O"
  "R_DEMOTION_MANAGER\020\326\014\022&\n!ACK_PROMOTION_O"
  "R_DEMOTION_MANAGER\020\327\014\022\034\n\027REQ_APPLIED_PLA"
  "YER_LIST\020\330\014\022\034\n\027ACK_APPLIED_PLAYER_LIST\020\331"
  "\014\022!\n\034REQ_DEAL_WITH_JOIN_COMMUNITY\020\332\014\022!\n\034"
  "ACK_DEAL_WITH_JOIN_COMMUNITY\020\333\014\022\027\n\022REQ_Q"
  "UIT_COMMUNITY\020\334\014\022\027\n\022ACK_QUIT_COMMUNITY\020\335"
  "\014\022 \n\033REQ_GET_OUT_OF_MY_COMMUNITY\020\336\014\022 \n\033A"
  "CK_GET_OUT_OF_MY_COMMUNITY\020\337\014\022\032\n\025REQ_COM"
  "MUNITY_SIGN_IN\020\340\014\022\032\n\025ACK_COMMUNITY_SIGN_"
  "IN\020\341\014\022\037\n\032SYNC_PLAYER_COMMUNITY_INFO\020\220\r\022%"
  "\n ADD_COMMUNITY_ACTIVE_VAL_AND_EXP\020\221\r\022\'\n"
  "\"NOTIFY_APPLY_JOIN_COMMUNITY_RESULT\020\222\r\022+"
  "\n&NOTIFY_PLAYER_GET_FIRED_FROM_COMMUNITY"
  "\020\223\r\022\"\n\035REQ_REGISTER_CHAT_SDK_ACCOUNT\020\244\r\022"
  "\"\n\035ACK_REGISTER_CHAT_SDK_ACCOUNT\020\245\r\022\030\n\023R"
  "EQ_CREATE_CHATROOM\020\246\r\022\030\n\023ACK_CREATE_CHAT"
  "ROOM\020\247\r\022$\n\037REQ_SDK_LOGIN_INFO_AND_CHATRO"
  "OM\020\250\r\022$\n\037ACK_SDK_LOGIN_INFO_AND_CHATROOM"
  "\020\251\r\022\033\n\026REQ_REPORT_CHAT_PLAYER\020\252\r\022\033\n\026ACK_"
  "REPORT_CHAT_PLAYER\020\253\r\022\032\n\025REQ_SEND_CHATRO"
  "OM_MSG\020\254\r\022\032\n\025ACK_SEND_CHATROOM_MSG\020\255\r\022%\n"
  " REQ_UPDATE_CHATROOM_ANNOUNCEMENT\020\256\r\022%\n "
  "ACK_UPDATE_CHATROOM_ANNOUNCEMENT\020\257\r\022\030\n\023R"
  "EQ_CHECK_CHAT_TEXT\020\260\r\022\030\n\023ACK_CHECK_CHAT_"
  "TEXT\020\261\r\022\032\n\025REQ_CREATE_CHAT_GROUP\020\262\r\022\032\n\025A"
  "CK_CREATE_CHAT_GROUP\020\263\r\022\032\n\025REQ_DELETE_CH"
  "AT_GROUP\020\264\r\022\032\n\025ACK_DELETE_CHAT_GROUP\020\265\r\022"
  "\034\n\027REQ_TRANSFER_CHAT_GROUP\020\266\r\022\034\n\027ACK_TRA"
  "NSFER_CHAT_GROUP\020\267\r\022\034\n\027REQ_ADD_CHAT_GROU"
  "P_USER\020\270\r\022\034\n\027ACK_ADD_CHAT_GROUP_USER\020\271\r\022"
  "\037\n\032REQ_DELETE_CHAT_GROUP_USER\020\272\r\022\037\n\032ACK_"
  "DELETE_CHAT_GROUP_USER\020\273\r\022\033\n\026REQ_SWITCH_"
  "CHAT_BUBBLE\020\274\r\022\033\n\026ACK_SWITCH_CHAT_BUBBLE"
  "\020\275\r\022\033\n\026REQ_UNLOCK_CHAT_BUBBLE\020\276\r\022\033\n\026ACK_"
  "UNLOCK_CHAT_BUBBLE\020\277\r\022\037\n\032REQ_UNLOCK_CHAT"
  "_MEME_GROUP\020\300\r\022\037\n\032ACK_UNLOCK_CHAT_MEME_G"
  "ROUP\020\301\r\022\031\n\024REQ_UNLOCK_CHAT_MEME\020\302\r\022\031\n\024AC"
  "K_UNLOCK_CHAT_MEME\020\303\r\022\024\n\017REQ_CMD_EXECUTE"
  "\020\220N\022\032\n\025REQ_TEST_SET_RESOURCE\020\223N\022\021\n\014REQ_S"
  "ET_ITEM\020\224N\022%\n REQ_TEST_SET_COLLEGE_EXAM_"
  "STATUS\020\225N\022\037\n\032REQ_TEST_REQ_RECRUIT_WITCH\020"
  "\226N\022\033\n\026REQ_GM_GET_PLAYER_DATA\020\233N\022\033\n\026ACK_G"
  "M_GET_PLAYER_DATA\020\234N\022\030\n\023REQ_GM_SET_PROPE"
  "RTY\020\235N\022\030\n\023ACK_GM_SET_PROPERTY\020\236N\022\031\n\024REQ_"
  "GM_OPEN_FUNCTION\020\237N\022\031\n\024ACK_GM_OPEN_FUNCT"
  "ION\020\240N\022\031\n\024REQ_GM_ADD_RESOURCES\020\241N\022\031\n\024ACK"
  "_GM_ADD_RESOURCES\020\242N\022\030\n\023REQ_GM_ENTER_BAT"
  "TLE\020\243N\022\030\n\023ACK_GM_ENTER_BATTLE\020\244N\022\026\n\021REQ_"
  "GM_END_BATTLE\020\245N\022\026\n\021ACK_GM_END_BATTLE\020\246N"
  "\022\027\n\022REQ_GM_CHAT_MUZZLE\020\247N\022\027\n\022ACK_GM_CHAT"
  "_MUZZLE\020\250N*M\n\nESceneType\022\020\n\014NORMAL_SCENE"
  "\020\000\022\026\n\022SINGLE_CLONE_SCENE\020\001\022\025\n\021MULTI_CLON"
  "E_SCENE\020\002*\304\001\n\013EBattleType\022\024\n\020BATTLE_TYPE"
  "_NONE\020\000\022\025\n\021BATTLE_TYPE_STORY\020\001\022\027\n\023BATTLE"
  "_TYPE_COLLEGE\020\002\022\027\n\023BATTLE_TYPE_EXPLORE\020\003"
  "\022\034\n\030BATTLE_TYPE_PNEUMAISLAND\020\004\022\035\n\031BATTLE"
  "_TYPE_ENDLESS_TOWER\020\005\022\031\n\025BATTLE_TYPE_BOT"
  "_ARENA\020\006*{\n\026EWitchKnowledgeOptType\022\020\n\014KO"
  "_KNOWLEDGE\020\000\022\023\n\017KO_SUB_MEDICINE\020\001\022\017\n\013KO_"
  "SUB_RUNE\020\002\022\025\n\021KO_SUB_DIVINATION\020\003\022\022\n\016KO_"
  "SUB_ALCHEMY\020\004*C\n\023EWitchPneumaOptType\022\014\n\010"
  "PO_EQUIP\020\000\022\016\n\nPO_UNEQUIP\020\001\022\016\n\nPO_REPLACE"
  "\020\002*V\n\022EWitchSkillOptType\022\024\n\020SO_GENERAL_S"
  "KILL\020\000\022\025\n\021SO_ADVANCED_SKILL\020\001\022\023\n\017SO_UNIQ"
  "UE_SKILL\020\002*\373\n\n\022EActiveMisisonFlag\022\034\n\030MF_"
  "DAILY_ACTIVE_REWARD_1\020\000\022\034\n\030MF_DAILY_ACTI"
  "VE_REWARD_2\020\001\022\034\n\030MF_DAILY_ACTIVE_REWARD_"
  "3\020\002\022\034\n\030MF_DAILY_ACTIVE_REWARD_4\020\003\022\034\n\030MF_"
  "DAILY_ACTIVE_REWARD_5\020\004\022\034\n\030MF_DAILY_ACTI"
  "VE_REWARD_6\020\005\022\034\n\030MF_DAILY_ACTIVE_REWARD_"
  "7\020\006\022\034\n\030MF_DAILY_ACTIVE_REWARD_8\020\007\022\034\n\030MF_"
  "DAILY_ACTIVE_REWARD_9\020\010\022\035\n\031MF_DAILY_ACTI"
  "VE_REWARD_10\020\t\022!\n\035MF_DAILY_ACTIVE_REWARD"
  "_DONE_1\020\n\022!\n\035MF_DAILY_ACTIVE_REWARD_DONE"
  "_2\020\013\022!\n\035MF_DAILY_ACTIVE_REWARD_DONE_3\020\014\022"
  "!\n\035MF_DAILY_ACTIVE_REWARD_DONE_4\020\r\022!\n\035MF"
  "_DAILY_ACTIVE_REWARD_DONE_5\020\016\022!\n\035MF_DAIL"
  "Y_ACTIVE_REWARD_DONE_6\020\017\022!\n\035MF_DAILY_ACT"
  "IVE_REWARD_DONE_7\020\020\022!\n\035MF_DAILY_ACTIVE_R"
  "EWARD_DONE_8\020\021\022!\n\035MF_DAILY_ACTIVE_REWARD"
  "_DONE_9\020\022\022\"\n\036MF_DAILY_ACTIVE_REWARD_DONE"
  "_10\020\023\022\035\n\031MF_WEEKLY_ACTIVE_REWARD_1\020\024\022\035\n\031"
  "MF_WEEKLY_ACTIVE_REWARD_2\020\025\022\035\n\031MF_WEEKLY"
  "_ACTIVE_REWARD_3\020\026\022\035\n\031MF_WEEKLY_ACTIVE_R"
  "EWARD_4\020\027\022\035\n\031MF_WEEKLY_ACTIVE_REWARD_5\020\030"
  "\022\035\n\031MF_WEEKLY_ACTIVE_REWARD_6\020\031\022\035\n\031MF_WE"
  "EKLY_ACTIVE_REWARD_7\020\032\022\035\n\031MF_WEEKLY_ACTI"
  "VE_REWARD_8\020\033\022\035\n\031MF_WEEKLY_ACTIVE_REWARD"
  "_9\020\034\022\036\n\032MF_WEEKLY_ACTIVE_REWARD_10\020\035\022\"\n\036"
  "MF_WEEKLY_ACTIVE_REWARD_DONE_1\020\036\022\"\n\036MF_W"
  "EEKLY_ACTIVE_REWARD_DONE_2\020\037\022\"\n\036MF_WEEKL"
  "Y_ACTIVE_REWARD_DONE_3\020 \022\"\n\036MF_WEEKLY_AC"
  "TIVE_REWARD_DONE_4\020!\022\"\n\036MF_WEEKLY_ACTIVE"
  "_REWARD_DONE_5\020\"\022\"\n\036MF_WEEKLY_ACTIVE_REW"
  "ARD_DONE_6\020#\022\"\n\036MF_WEEKLY_ACTIVE_REWARD_"
  "DONE_7\020$\022\"\n\036MF_WEEKLY_ACTIVE_REWARD_DONE"
  "_8\020%\022\"\n\036MF_WEEKLY_ACTIVE_REWARD_DONE_9\020&"
  "\022#\n\037MF_WEEKLY_ACTIVE_REWARD_DONE_10\020\'\022\033\n"
  "\027MF_DAILY_MISSION_UPDATE\020(\022\034\n\030MF_WEEKLY_"
  "MISSION_UPDATE\020)*(\n\010ShopType\022\013\n\007ST_NONE\020"
  "\000\022\017\n\013ST_BOTARENA\020\001*3\n\017ShopListingType\022\016\n"
  "\nSLT_Finity\020\000\022\020\n\014SLT_Infinity\020\001*Q\n\022Botar"
  "enaPromptType\022\014\n\010BPT_NONE\020\000\022\r\n\tBPT_GRADE"
  "\020\001\022\r\n\tBPT_STAGE\020\002\022\017\n\013BPT_SESSION\020\003*_\n\030EC"
  "ommunityMemberPosition\022\026\n\022MP_PREPARED_ME"
  "MBER\020\000\022\r\n\tMP_MEMBER\020\001\022\016\n\nMP_MANAGER\020\002\022\014\n"
  "\010MP_CHIEF\020\003*\202\002\n\024BotarenaReplayResult\022\026\n\022"
  "BCR_ATTACK_SUCCESS\020\000\022\026\n\022BCR_ATTACK_FAILU"
  "RE\020\001\022\031\n\025BCR_DEFENSIVE_SUCCESS\020\002\022\031\n\025BCR_D"
  "EFENSIVE_FAILURE\020\003\022\036\n\032BCR_COUNTER_ATTACK"
  "_SUCCESS\020\004\022\036\n\032BCR_COUNTER_ATTACK_FAILURE"
  "\020\005\022!\n\035BCR_COUNTER_DEFENSIVE_SUCCESS\020\006\022!\n"
  "\035BCR_COUNTER_DEFENSIVE_FAILURE\020\007*;\n\tECha"
  "tType\022\r\n\tCT_PUBLIC\020\000\022\020\n\014CT_COMMUNITY\020\001\022\r"
  "\n\tCT_FRIEND\020\002*@\n\026ERecommendedFriendType\022"
  "\n\n\006RT_TOP\020\000\022\013\n\007RT_SAME\020\001\022\r\n\tRT_RANDOM\020\002B"
  "\nZ\010./;KWMsgb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kwmsgdefine_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kwmsgdefine_2eproto = {
  false, false, 24179, descriptor_table_protodef_kwmsgdefine_2eproto, "kwmsgdefine.proto", 
  &descriptor_table_kwmsgdefine_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_kwmsgdefine_2eproto::offsets,
  nullptr, file_level_enum_descriptors_kwmsgdefine_2eproto, file_level_service_descriptors_kwmsgdefine_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_kwmsgdefine_2eproto_getter() {
  return &descriptor_table_kwmsgdefine_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_kwmsgdefine_2eproto(&descriptor_table_kwmsgdefine_2eproto);
namespace KWMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGameEventCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[0];
}
bool EGameEventCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 60:
    case 70:
    case 71:
    case 72:
    case 73:
    case 80:
    case 81:
    case 82:
    case 83:
    case 100:
    case 150:
    case 151:
    case 152:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 334:
    case 335:
    case 336:
    case 337:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 368:
    case 381:
    case 382:
    case 383:
    case 390:
    case 391:
    case 392:
    case 393:
    case 394:
    case 395:
    case 396:
    case 397:
    case 398:
    case 399:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 420:
    case 421:
    case 422:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 440:
    case 441:
    case 442:
    case 443:
    case 444:
    case 445:
    case 446:
    case 451:
    case 452:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 480:
    case 481:
    case 482:
    case 483:
    case 484:
    case 485:
    case 486:
    case 487:
    case 490:
    case 491:
    case 492:
    case 493:
    case 500:
    case 501:
    case 502:
    case 503:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 558:
    case 559:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 600:
    case 601:
    case 602:
    case 603:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1207:
    case 1208:
    case 1209:
    case 1210:
    case 1211:
    case 1212:
    case 1213:
    case 1214:
    case 1215:
    case 1216:
    case 1217:
    case 1218:
    case 1219:
    case 1220:
    case 1221:
    case 1222:
    case 1223:
    case 1224:
    case 1225:
    case 1226:
    case 1227:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGameMsgID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[1];
}
bool EGameMsgID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 200:
    case 201:
    case 202:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 230:
    case 231:
    case 232:
    case 233:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 260:
    case 261:
    case 300:
    case 301:
    case 302:
    case 303:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 340:
    case 400:
    case 401:
    case 410:
    case 411:
    case 412:
    case 413:
    case 420:
    case 421:
    case 422:
    case 423:
    case 424:
    case 425:
    case 426:
    case 427:
    case 428:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 437:
    case 438:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1047:
    case 1048:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1060:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1097:
    case 1098:
    case 1099:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1207:
    case 1208:
    case 1209:
    case 1210:
    case 1211:
    case 1221:
    case 1222:
    case 1223:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1306:
    case 1307:
    case 1308:
    case 1309:
    case 1310:
    case 1311:
    case 1312:
    case 1313:
    case 1314:
    case 1315:
    case 1316:
    case 1317:
    case 1318:
    case 1319:
    case 1320:
    case 1321:
    case 1330:
    case 1331:
    case 1350:
    case 1351:
    case 1352:
    case 1353:
    case 1354:
    case 1355:
    case 1356:
    case 1357:
    case 1358:
    case 1359:
    case 1360:
    case 1361:
    case 1362:
    case 1363:
    case 1364:
    case 1365:
    case 1366:
    case 1367:
    case 1368:
    case 1369:
    case 1370:
    case 1371:
    case 1372:
    case 1373:
    case 1374:
    case 1375:
    case 1376:
    case 1377:
    case 1390:
    case 1391:
    case 1392:
    case 1393:
    case 1394:
    case 1395:
    case 1396:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1410:
    case 1411:
    case 1412:
    case 1413:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1466:
    case 1467:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1488:
    case 1489:
    case 1490:
    case 1491:
    case 1492:
    case 1493:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1600:
    case 1601:
    case 1602:
    case 1603:
    case 1604:
    case 1605:
    case 1606:
    case 1607:
    case 1608:
    case 1609:
    case 1610:
    case 1611:
    case 1612:
    case 1613:
    case 1614:
    case 1615:
    case 1616:
    case 1617:
    case 1618:
    case 1619:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1625:
    case 1626:
    case 1627:
    case 1628:
    case 1629:
    case 1630:
    case 1631:
    case 1632:
    case 1633:
    case 1680:
    case 1681:
    case 1682:
    case 1683:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 1707:
    case 1708:
    case 1709:
    case 1710:
    case 1711:
    case 1712:
    case 1713:
    case 1714:
    case 1715:
    case 1716:
    case 1717:
    case 1718:
    case 1719:
    case 1720:
    case 1721:
    case 1722:
    case 1723:
    case 1724:
    case 1725:
    case 1726:
    case 1727:
    case 1728:
    case 1729:
    case 1730:
    case 1731:
    case 1900:
    case 1901:
    case 10000:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10011:
    case 10012:
    case 10013:
    case 10014:
    case 10015:
    case 10016:
    case 10017:
    case 10018:
    case 10019:
    case 10020:
    case 10021:
    case 10022:
    case 10023:
    case 10024:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESceneType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[2];
}
bool ESceneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EBattleType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[3];
}
bool EBattleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EWitchKnowledgeOptType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[4];
}
bool EWitchKnowledgeOptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EWitchPneumaOptType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[5];
}
bool EWitchPneumaOptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EWitchSkillOptType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[6];
}
bool EWitchSkillOptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EActiveMisisonFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[7];
}
bool EActiveMisisonFlag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShopType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[8];
}
bool ShopType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShopListingType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[9];
}
bool ShopListingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BotarenaPromptType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[10];
}
bool BotarenaPromptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECommunityMemberPosition_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[11];
}
bool ECommunityMemberPosition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BotarenaReplayResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[12];
}
bool BotarenaReplayResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[13];
}
bool EChatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERecommendedFriendType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgdefine_2eproto);
  return file_level_enum_descriptors_kwmsgdefine_2eproto[14];
}
bool ERecommendedFriendType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KWMsg
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
