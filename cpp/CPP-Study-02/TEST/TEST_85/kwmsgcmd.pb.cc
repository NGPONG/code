// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kwmsgcmd.proto

#include "kwmsgcmd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace KWMsg {
constexpr ReqCmdExecute::ReqCmdExecute(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cmd_operator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cmd_(0)
  , world_id_(0)
  , req_id_(int64_t{0}){}
struct ReqCmdExecuteDefaultTypeInternal {
  constexpr ReqCmdExecuteDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqCmdExecuteDefaultTypeInternal() {}
  union {
    ReqCmdExecute _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqCmdExecuteDefaultTypeInternal _ReqCmdExecute_default_instance_;
constexpr ReqGmGetPlayerData::ReqGmGetPlayerData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_names_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_type_(0)

  , data_type_(0)

  , req_id_(int64_t{0}){}
struct ReqGmGetPlayerDataDefaultTypeInternal {
  constexpr ReqGmGetPlayerDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmGetPlayerDataDefaultTypeInternal() {}
  union {
    ReqGmGetPlayerData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmGetPlayerDataDefaultTypeInternal _ReqGmGetPlayerData_default_instance_;
constexpr AckGmGetPlayerData::AckGmGetPlayerData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_names_()
  , data_values_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , req_id_(int64_t{0})
  , id_type_(0)

  , data_type_(0)

  , ret_type_(0)
{}
struct AckGmGetPlayerDataDefaultTypeInternal {
  constexpr AckGmGetPlayerDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AckGmGetPlayerDataDefaultTypeInternal() {}
  union {
    AckGmGetPlayerData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AckGmGetPlayerDataDefaultTypeInternal _AckGmGetPlayerData_default_instance_;
constexpr ReqGmSetProperty::ReqGmSetProperty(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , property_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , property_value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReqGmSetPropertyDefaultTypeInternal {
  constexpr ReqGmSetPropertyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmSetPropertyDefaultTypeInternal() {}
  union {
    ReqGmSetProperty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmSetPropertyDefaultTypeInternal _ReqGmSetProperty_default_instance_;
constexpr ReqGmOpenFunction::ReqGmOpenFunction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , function_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , on_(0){}
struct ReqGmOpenFunctionDefaultTypeInternal {
  constexpr ReqGmOpenFunctionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmOpenFunctionDefaultTypeInternal() {}
  union {
    ReqGmOpenFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmOpenFunctionDefaultTypeInternal _ReqGmOpenFunction_default_instance_;
constexpr ReqGmAddResources_ReqGmAddResourceInfo::ReqGmAddResources_ReqGmAddResourceInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , count_(int64_t{0}){}
struct ReqGmAddResources_ReqGmAddResourceInfoDefaultTypeInternal {
  constexpr ReqGmAddResources_ReqGmAddResourceInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmAddResources_ReqGmAddResourceInfoDefaultTypeInternal() {}
  union {
    ReqGmAddResources_ReqGmAddResourceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmAddResources_ReqGmAddResourceInfoDefaultTypeInternal _ReqGmAddResources_ReqGmAddResourceInfo_default_instance_;
constexpr ReqGmAddResources::ReqGmAddResources(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_infos_()
  , player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReqGmAddResourcesDefaultTypeInternal {
  constexpr ReqGmAddResourcesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmAddResourcesDefaultTypeInternal() {}
  union {
    ReqGmAddResources _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmAddResourcesDefaultTypeInternal _ReqGmAddResources_default_instance_;
constexpr ReqGmEnterBattle::ReqGmEnterBattle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , game_play_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , team_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReqGmEnterBattleDefaultTypeInternal {
  constexpr ReqGmEnterBattleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmEnterBattleDefaultTypeInternal() {}
  union {
    ReqGmEnterBattle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmEnterBattleDefaultTypeInternal _ReqGmEnterBattle_default_instance_;
constexpr ReqGmEndBattle::ReqGmEndBattle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , victory_(0){}
struct ReqGmEndBattleDefaultTypeInternal {
  constexpr ReqGmEndBattleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmEndBattleDefaultTypeInternal() {}
  union {
    ReqGmEndBattle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmEndBattleDefaultTypeInternal _ReqGmEndBattle_default_instance_;
constexpr ReqGmChatMuzzle::ReqGmChatMuzzle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , muzzle_time_(0){}
struct ReqGmChatMuzzleDefaultTypeInternal {
  constexpr ReqGmChatMuzzleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmChatMuzzleDefaultTypeInternal() {}
  union {
    ReqGmChatMuzzle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmChatMuzzleDefaultTypeInternal _ReqGmChatMuzzle_default_instance_;
constexpr ReqGmSetGuideGroup::ReqGmSetGuideGroup(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guide_group_ids_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guide_state_(0){}
struct ReqGmSetGuideGroupDefaultTypeInternal {
  constexpr ReqGmSetGuideGroupDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmSetGuideGroupDefaultTypeInternal() {}
  union {
    ReqGmSetGuideGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmSetGuideGroupDefaultTypeInternal _ReqGmSetGuideGroup_default_instance_;
constexpr ReqGmSendNotificationEvent::ReqGmSendNotificationEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_type_(0){}
struct ReqGmSendNotificationEventDefaultTypeInternal {
  constexpr ReqGmSendNotificationEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmSendNotificationEventDefaultTypeInternal() {}
  union {
    ReqGmSendNotificationEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmSendNotificationEventDefaultTypeInternal _ReqGmSendNotificationEvent_default_instance_;
constexpr ReqGmTriggerEvent::ReqGmTriggerEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , params_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , event_id_(0){}
struct ReqGmTriggerEventDefaultTypeInternal {
  constexpr ReqGmTriggerEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmTriggerEventDefaultTypeInternal() {}
  union {
    ReqGmTriggerEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmTriggerEventDefaultTypeInternal _ReqGmTriggerEvent_default_instance_;
constexpr ReqGmSetRecord::ReqGmSetRecord(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , record_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , record_value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , opt_type_(0)
  , record_row_(0)
  , record_col_(0){}
struct ReqGmSetRecordDefaultTypeInternal {
  constexpr ReqGmSetRecordDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmSetRecordDefaultTypeInternal() {}
  union {
    ReqGmSetRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmSetRecordDefaultTypeInternal _ReqGmSetRecord_default_instance_;
constexpr ReqGmCmdDebugAccount::ReqGmCmdDebugAccount(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReqGmCmdDebugAccountDefaultTypeInternal {
  constexpr ReqGmCmdDebugAccountDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReqGmCmdDebugAccountDefaultTypeInternal() {}
  union {
    ReqGmCmdDebugAccount _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReqGmCmdDebugAccountDefaultTypeInternal _ReqGmCmdDebugAccount_default_instance_;
}  // namespace KWMsg
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kwmsgcmd_2eproto[15];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kwmsgcmd_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kwmsgcmd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kwmsgcmd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, cmd_operator_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, cmd_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, world_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, payload_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqCmdExecute, req_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, id_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, data_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, req_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmGetPlayerData, data_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, id_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, req_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, data_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, ret_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, data_names_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::AckGmGetPlayerData, data_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetProperty, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetProperty, property_name_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetProperty, property_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmOpenFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmOpenFunction, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmOpenFunction, function_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmOpenFunction, on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo, resource_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmAddResources, resource_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEnterBattle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEnterBattle, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEnterBattle, game_play_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEnterBattle, team_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEndBattle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEndBattle, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmEndBattle, victory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmChatMuzzle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmChatMuzzle, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmChatMuzzle, muzzle_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetGuideGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetGuideGroup, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetGuideGroup, guide_group_ids_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetGuideGroup, guide_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSendNotificationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSendNotificationEvent, event_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmTriggerEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmTriggerEvent, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmTriggerEvent, event_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmTriggerEvent, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, player_id_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, opt_type_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, record_name_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, record_value_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, record_row_),
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmSetRecord, record_col_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmCmdDebugAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KWMsg::ReqGmCmdDebugAccount, player_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KWMsg::ReqCmdExecute)},
  { 10, -1, sizeof(::KWMsg::ReqGmGetPlayerData)},
  { 20, -1, sizeof(::KWMsg::AckGmGetPlayerData)},
  { 32, -1, sizeof(::KWMsg::ReqGmSetProperty)},
  { 40, -1, sizeof(::KWMsg::ReqGmOpenFunction)},
  { 48, -1, sizeof(::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo)},
  { 55, -1, sizeof(::KWMsg::ReqGmAddResources)},
  { 62, -1, sizeof(::KWMsg::ReqGmEnterBattle)},
  { 70, -1, sizeof(::KWMsg::ReqGmEndBattle)},
  { 77, -1, sizeof(::KWMsg::ReqGmChatMuzzle)},
  { 84, -1, sizeof(::KWMsg::ReqGmSetGuideGroup)},
  { 92, -1, sizeof(::KWMsg::ReqGmSendNotificationEvent)},
  { 98, -1, sizeof(::KWMsg::ReqGmTriggerEvent)},
  { 106, -1, sizeof(::KWMsg::ReqGmSetRecord)},
  { 117, -1, sizeof(::KWMsg::ReqGmCmdDebugAccount)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqCmdExecute_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmGetPlayerData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_AckGmGetPlayerData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmSetProperty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmOpenFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmAddResources_ReqGmAddResourceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmAddResources_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmEnterBattle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmEndBattle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmChatMuzzle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmSetGuideGroup_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmSendNotificationEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmTriggerEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmSetRecord_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KWMsg::_ReqGmCmdDebugAccount_default_instance_),
};

const char descriptor_table_protodef_kwmsgcmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016kwmsgcmd.proto\022\005KWMsg\"e\n\rReqCmdExecute"
  "\022\024\n\014cmd_operator\030\001 \001(\014\022\013\n\003cmd\030\002 \001(\005\022\020\n\010w"
  "orld_id\030\003 \001(\005\022\017\n\007payload\030\004 \001(\014\022\016\n\006req_id"
  "\030\005 \001(\003\"\244\001\n\022ReqGmGetPlayerData\022\n\n\002id\030\001 \001("
  "\014\022.\n\007id_type\030\002 \001(\0162\035.KWMsg.EGmGetPlayerD"
  "ataIDType\022.\n\tdata_type\030\003 \001(\0162\033.KWMsg.EGm"
  "GetPlayerDataType\022\016\n\006req_id\030\004 \001(\003\022\022\n\ndat"
  "a_names\030\005 \003(\014\"\356\001\n\022AckGmGetPlayerData\022\n\n\002"
  "id\030\001 \001(\014\022.\n\007id_type\030\002 \001(\0162\035.KWMsg.EGmGet"
  "PlayerDataIDType\022\016\n\006req_id\030\003 \001(\003\022.\n\tdata"
  "_type\030\004 \001(\0162\033.KWMsg.EGmGetPlayerDataType"
  "\0223\n\010ret_type\030\005 \001(\0162!.KWMsg.EAckGmGetPlay"
  "erDataRetType\022\022\n\ndata_names\030\006 \003(\014\022\023\n\013dat"
  "a_values\030\007 \003(\014\"T\n\020ReqGmSetProperty\022\021\n\tpl"
  "ayer_id\030\001 \001(\014\022\025\n\rproperty_name\030\002 \001(\014\022\026\n\016"
  "property_value\030\003 \001(\014\"G\n\021ReqGmOpenFunctio"
  "n\022\021\n\tplayer_id\030\001 \001(\014\022\023\n\013function_id\030\002 \001("
  "\014\022\n\n\002on\030\003 \001(\005\"\251\001\n\021ReqGmAddResources\022\021\n\tp"
  "layer_id\030\001 \001(\014\022E\n\016resource_infos\030\002 \003(\0132-"
  ".KWMsg.ReqGmAddResources.ReqGmAddResourc"
  "eInfo\032:\n\024ReqGmAddResourceInfo\022\023\n\013resourc"
  "e_id\030\001 \001(\014\022\r\n\005count\030\002 \001(\003\"L\n\020ReqGmEnterB"
  "attle\022\021\n\tplayer_id\030\001 \001(\014\022\024\n\014game_play_id"
  "\030\002 \001(\014\022\017\n\007team_id\030\003 \001(\014\"4\n\016ReqGmEndBattl"
  "e\022\021\n\tplayer_id\030\001 \001(\014\022\017\n\007victory\030\002 \001(\005\"9\n"
  "\017ReqGmChatMuzzle\022\021\n\tplayer_id\030\001 \001(\014\022\023\n\013m"
  "uzzle_time\030\002 \001(\005\"U\n\022ReqGmSetGuideGroup\022\021"
  "\n\tplayer_id\030\001 \001(\014\022\027\n\017guide_group_ids\030\002 \001"
  "(\014\022\023\n\013guide_state\030\003 \001(\005\"0\n\032ReqGmSendNoti"
  "ficationEvent\022\022\n\nevent_type\030\001 \001(\005\"H\n\021Req"
  "GmTriggerEvent\022\021\n\tplayer_id\030\001 \001(\014\022\020\n\010eve"
  "nt_id\030\002 \001(\005\022\016\n\006params\030\003 \001(\014\"\210\001\n\016ReqGmSet"
  "Record\022\021\n\tplayer_id\030\001 \001(\014\022\020\n\010opt_type\030\002 "
  "\001(\005\022\023\n\013record_name\030\003 \001(\014\022\024\n\014record_value"
  "\030\004 \001(\014\022\022\n\nrecord_row\030\005 \001(\005\022\022\n\nrecord_col"
  "\030\006 \001(\005\")\n\024ReqGmCmdDebugAccount\022\021\n\tplayer"
  "_id\030\001 \001(\014*R\n\024EGmGetPlayerDataType\022\013\n\007EDT"
  "_MIN\020\000\022\020\n\014EDT_PROPERTY\020\001\022\016\n\nEDT_RECORD\020\002"
  "\022\013\n\007EDT_MAX\020\003*h\n\026EGmGetPlayerDataIDType\022"
  "\013\n\007EIT_MIN\020\000\022\022\n\016EIT_ACCOUNT_ID\020\001\022\022\n\016EIT_"
  "DIGITAL_ID\020\002\022\014\n\010EIT_GUID\020\003\022\013\n\007EIT_MAX\020\004*"
  "\306\001\n\032EAckGmGetPlayerDataRetType\022\020\n\014EART_S"
  "UCCESS\020\000\022\035\n\031EART_ERR_PLAYER_NOT_EXIST\020\001\022"
  "\032\n\026EART_ERR_KEY_NOT_EXIST\020\002\022\026\n\022EART_ERR_"
  "DATA_TYPE\020\003\022\024\n\020EART_ERR_ID_TYPE\020\004\022\027\n\023EAR"
  "T_ERR_DATA_VALUE\020\005\022\024\n\020EART_ERR_UNKNOWN\020\006"
  "B\nZ\010./;KWMsgb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kwmsgcmd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kwmsgcmd_2eproto = {
  false, false, 1860, descriptor_table_protodef_kwmsgcmd_2eproto, "kwmsgcmd.proto", 
  &descriptor_table_kwmsgcmd_2eproto_once, nullptr, 0, 15,
  schemas, file_default_instances, TableStruct_kwmsgcmd_2eproto::offsets,
  file_level_metadata_kwmsgcmd_2eproto, file_level_enum_descriptors_kwmsgcmd_2eproto, file_level_service_descriptors_kwmsgcmd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_kwmsgcmd_2eproto_getter() {
  return &descriptor_table_kwmsgcmd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_kwmsgcmd_2eproto(&descriptor_table_kwmsgcmd_2eproto);
namespace KWMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGmGetPlayerDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgcmd_2eproto);
  return file_level_enum_descriptors_kwmsgcmd_2eproto[0];
}
bool EGmGetPlayerDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGmGetPlayerDataIDType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgcmd_2eproto);
  return file_level_enum_descriptors_kwmsgcmd_2eproto[1];
}
bool EGmGetPlayerDataIDType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAckGmGetPlayerDataRetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kwmsgcmd_2eproto);
  return file_level_enum_descriptors_kwmsgcmd_2eproto[2];
}
bool EAckGmGetPlayerDataRetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ReqCmdExecute::_Internal {
 public:
};

ReqCmdExecute::ReqCmdExecute(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqCmdExecute)
}
ReqCmdExecute::ReqCmdExecute(const ReqCmdExecute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cmd_operator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cmd_operator().empty()) {
    cmd_operator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cmd_operator(), 
      GetArenaForAllocation());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&req_id_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(req_id_));
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqCmdExecute)
}

void ReqCmdExecute::SharedCtor() {
cmd_operator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cmd_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&req_id_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(req_id_));
}

ReqCmdExecute::~ReqCmdExecute() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqCmdExecute)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqCmdExecute::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cmd_operator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqCmdExecute::ArenaDtor(void* object) {
  ReqCmdExecute* _this = reinterpret_cast< ReqCmdExecute* >(object);
  (void)_this;
}
void ReqCmdExecute::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqCmdExecute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqCmdExecute::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqCmdExecute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_operator_.ClearToEmpty();
  payload_.ClearToEmpty();
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&req_id_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(req_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqCmdExecute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes cmd_operator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cmd_operator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cmd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 world_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          world_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes payload = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 req_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          req_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqCmdExecute::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqCmdExecute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cmd_operator = 1;
  if (!this->cmd_operator().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_cmd_operator(), target);
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cmd(), target);
  }

  // int32 world_id = 3;
  if (this->world_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_world_id(), target);
  }

  // bytes payload = 4;
  if (!this->payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_payload(), target);
  }

  // int64 req_id = 5;
  if (this->req_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_req_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqCmdExecute)
  return target;
}

size_t ReqCmdExecute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqCmdExecute)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cmd_operator = 1;
  if (!this->cmd_operator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cmd_operator());
  }

  // bytes payload = 4;
  if (!this->payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cmd());
  }

  // int32 world_id = 3;
  if (this->world_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_world_id());
  }

  // int64 req_id = 5;
  if (this->req_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_req_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCmdExecute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqCmdExecute)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCmdExecute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqCmdExecute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqCmdExecute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqCmdExecute)
    MergeFrom(*source);
  }
}

void ReqCmdExecute::MergeFrom(const ReqCmdExecute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqCmdExecute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.cmd_operator().empty()) {
    _internal_set_cmd_operator(from._internal_cmd_operator());
  }
  if (!from.payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.cmd() != 0) {
    _internal_set_cmd(from._internal_cmd());
  }
  if (from.world_id() != 0) {
    _internal_set_world_id(from._internal_world_id());
  }
  if (from.req_id() != 0) {
    _internal_set_req_id(from._internal_req_id());
  }
}

void ReqCmdExecute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqCmdExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCmdExecute::CopyFrom(const ReqCmdExecute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqCmdExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCmdExecute::IsInitialized() const {
  return true;
}

void ReqCmdExecute::InternalSwap(ReqCmdExecute* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cmd_operator_, GetArenaForAllocation(),
      &other->cmd_operator_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, GetArenaForAllocation(),
      &other->payload_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqCmdExecute, req_id_)
      + sizeof(ReqCmdExecute::req_id_)
      - PROTOBUF_FIELD_OFFSET(ReqCmdExecute, cmd_)>(
          reinterpret_cast<char*>(&cmd_),
          reinterpret_cast<char*>(&other->cmd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqCmdExecute::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[0]);
}

// ===================================================================

class ReqGmGetPlayerData::_Internal {
 public:
};

ReqGmGetPlayerData::ReqGmGetPlayerData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmGetPlayerData)
}
ReqGmGetPlayerData::ReqGmGetPlayerData(const ReqGmGetPlayerData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_names_(from.data_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_type_, &from.id_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&req_id_) -
    reinterpret_cast<char*>(&id_type_)) + sizeof(req_id_));
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmGetPlayerData)
}

void ReqGmGetPlayerData::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&req_id_) -
    reinterpret_cast<char*>(&id_type_)) + sizeof(req_id_));
}

ReqGmGetPlayerData::~ReqGmGetPlayerData() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmGetPlayerData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmGetPlayerData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmGetPlayerData::ArenaDtor(void* object) {
  ReqGmGetPlayerData* _this = reinterpret_cast< ReqGmGetPlayerData* >(object);
  (void)_this;
}
void ReqGmGetPlayerData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmGetPlayerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmGetPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmGetPlayerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_names_.Clear();
  id_.ClearToEmpty();
  ::memset(&id_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&req_id_) -
      reinterpret_cast<char*>(&id_type_)) + sizeof(req_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmGetPlayerData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_id_type(static_cast<::KWMsg::EGmGetPlayerDataIDType>(val));
        } else goto handle_unusual;
        continue;
      // .KWMsg.EGmGetPlayerDataType data_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_data_type(static_cast<::KWMsg::EGmGetPlayerDataType>(val));
        } else goto handle_unusual;
        continue;
      // int64 req_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          req_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes data_names = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmGetPlayerData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmGetPlayerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
  if (this->id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_id_type(), target);
  }

  // .KWMsg.EGmGetPlayerDataType data_type = 3;
  if (this->data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_data_type(), target);
  }

  // int64 req_id = 4;
  if (this->req_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_req_id(), target);
  }

  // repeated bytes data_names = 5;
  for (int i = 0, n = this->_internal_data_names_size(); i < n; i++) {
    const auto& s = this->_internal_data_names(i);
    target = stream->WriteBytes(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmGetPlayerData)
  return target;
}

size_t ReqGmGetPlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmGetPlayerData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data_names = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_names_.size());
  for (int i = 0, n = data_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      data_names_.Get(i));
  }

  // bytes id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
  if (this->id_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_id_type());
  }

  // .KWMsg.EGmGetPlayerDataType data_type = 3;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  // int64 req_id = 4;
  if (this->req_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_req_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmGetPlayerData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmGetPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmGetPlayerData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmGetPlayerData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmGetPlayerData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmGetPlayerData)
    MergeFrom(*source);
  }
}

void ReqGmGetPlayerData::MergeFrom(const ReqGmGetPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmGetPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_names_.MergeFrom(from.data_names_);
  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from.id_type() != 0) {
    _internal_set_id_type(from._internal_id_type());
  }
  if (from.data_type() != 0) {
    _internal_set_data_type(from._internal_data_type());
  }
  if (from.req_id() != 0) {
    _internal_set_req_id(from._internal_req_id());
  }
}

void ReqGmGetPlayerData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmGetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmGetPlayerData::CopyFrom(const ReqGmGetPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmGetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmGetPlayerData::IsInitialized() const {
  return true;
}

void ReqGmGetPlayerData::InternalSwap(ReqGmGetPlayerData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_names_.InternalSwap(&other->data_names_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqGmGetPlayerData, req_id_)
      + sizeof(ReqGmGetPlayerData::req_id_)
      - PROTOBUF_FIELD_OFFSET(ReqGmGetPlayerData, id_type_)>(
          reinterpret_cast<char*>(&id_type_),
          reinterpret_cast<char*>(&other->id_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmGetPlayerData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[1]);
}

// ===================================================================

class AckGmGetPlayerData::_Internal {
 public:
};

AckGmGetPlayerData::AckGmGetPlayerData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_names_(arena),
  data_values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.AckGmGetPlayerData)
}
AckGmGetPlayerData::AckGmGetPlayerData(const AckGmGetPlayerData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_names_(from.data_names_),
      data_values_(from.data_values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&req_id_, &from.req_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_type_) -
    reinterpret_cast<char*>(&req_id_)) + sizeof(ret_type_));
  // @@protoc_insertion_point(copy_constructor:KWMsg.AckGmGetPlayerData)
}

void AckGmGetPlayerData::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&req_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ret_type_) -
    reinterpret_cast<char*>(&req_id_)) + sizeof(ret_type_));
}

AckGmGetPlayerData::~AckGmGetPlayerData() {
  // @@protoc_insertion_point(destructor:KWMsg.AckGmGetPlayerData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AckGmGetPlayerData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AckGmGetPlayerData::ArenaDtor(void* object) {
  AckGmGetPlayerData* _this = reinterpret_cast< AckGmGetPlayerData* >(object);
  (void)_this;
}
void AckGmGetPlayerData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AckGmGetPlayerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AckGmGetPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.AckGmGetPlayerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_names_.Clear();
  data_values_.Clear();
  id_.ClearToEmpty();
  ::memset(&req_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_type_) -
      reinterpret_cast<char*>(&req_id_)) + sizeof(ret_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AckGmGetPlayerData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_id_type(static_cast<::KWMsg::EGmGetPlayerDataIDType>(val));
        } else goto handle_unusual;
        continue;
      // int64 req_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          req_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .KWMsg.EGmGetPlayerDataType data_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_data_type(static_cast<::KWMsg::EGmGetPlayerDataType>(val));
        } else goto handle_unusual;
        continue;
      // .KWMsg.EAckGmGetPlayerDataRetType ret_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ret_type(static_cast<::KWMsg::EAckGmGetPlayerDataRetType>(val));
        } else goto handle_unusual;
        continue;
      // repeated bytes data_names = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes data_values = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data_values();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AckGmGetPlayerData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.AckGmGetPlayerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
  if (this->id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_id_type(), target);
  }

  // int64 req_id = 3;
  if (this->req_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_req_id(), target);
  }

  // .KWMsg.EGmGetPlayerDataType data_type = 4;
  if (this->data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_data_type(), target);
  }

  // .KWMsg.EAckGmGetPlayerDataRetType ret_type = 5;
  if (this->ret_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_ret_type(), target);
  }

  // repeated bytes data_names = 6;
  for (int i = 0, n = this->_internal_data_names_size(); i < n; i++) {
    const auto& s = this->_internal_data_names(i);
    target = stream->WriteBytes(6, s, target);
  }

  // repeated bytes data_values = 7;
  for (int i = 0, n = this->_internal_data_values_size(); i < n; i++) {
    const auto& s = this->_internal_data_values(i);
    target = stream->WriteBytes(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.AckGmGetPlayerData)
  return target;
}

size_t AckGmGetPlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.AckGmGetPlayerData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data_names = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_names_.size());
  for (int i = 0, n = data_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      data_names_.Get(i));
  }

  // repeated bytes data_values = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_values_.size());
  for (int i = 0, n = data_values_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      data_values_.Get(i));
  }

  // bytes id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int64 req_id = 3;
  if (this->req_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_req_id());
  }

  // .KWMsg.EGmGetPlayerDataIDType id_type = 2;
  if (this->id_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_id_type());
  }

  // .KWMsg.EGmGetPlayerDataType data_type = 4;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  // .KWMsg.EAckGmGetPlayerDataRetType ret_type = 5;
  if (this->ret_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ret_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AckGmGetPlayerData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.AckGmGetPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const AckGmGetPlayerData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AckGmGetPlayerData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.AckGmGetPlayerData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.AckGmGetPlayerData)
    MergeFrom(*source);
  }
}

void AckGmGetPlayerData::MergeFrom(const AckGmGetPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.AckGmGetPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_names_.MergeFrom(from.data_names_);
  data_values_.MergeFrom(from.data_values_);
  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from.req_id() != 0) {
    _internal_set_req_id(from._internal_req_id());
  }
  if (from.id_type() != 0) {
    _internal_set_id_type(from._internal_id_type());
  }
  if (from.data_type() != 0) {
    _internal_set_data_type(from._internal_data_type());
  }
  if (from.ret_type() != 0) {
    _internal_set_ret_type(from._internal_ret_type());
  }
}

void AckGmGetPlayerData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.AckGmGetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckGmGetPlayerData::CopyFrom(const AckGmGetPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.AckGmGetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckGmGetPlayerData::IsInitialized() const {
  return true;
}

void AckGmGetPlayerData::InternalSwap(AckGmGetPlayerData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_names_.InternalSwap(&other->data_names_);
  data_values_.InternalSwap(&other->data_values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AckGmGetPlayerData, ret_type_)
      + sizeof(AckGmGetPlayerData::ret_type_)
      - PROTOBUF_FIELD_OFFSET(AckGmGetPlayerData, req_id_)>(
          reinterpret_cast<char*>(&req_id_),
          reinterpret_cast<char*>(&other->req_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AckGmGetPlayerData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[2]);
}

// ===================================================================

class ReqGmSetProperty::_Internal {
 public:
};

ReqGmSetProperty::ReqGmSetProperty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmSetProperty)
}
ReqGmSetProperty::ReqGmSetProperty(const ReqGmSetProperty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  property_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_property_name().empty()) {
    property_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_property_name(), 
      GetArenaForAllocation());
  }
  property_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_property_value().empty()) {
    property_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_property_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmSetProperty)
}

void ReqGmSetProperty::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
property_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
property_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqGmSetProperty::~ReqGmSetProperty() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmSetProperty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmSetProperty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  property_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  property_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmSetProperty::ArenaDtor(void* object) {
  ReqGmSetProperty* _this = reinterpret_cast< ReqGmSetProperty* >(object);
  (void)_this;
}
void ReqGmSetProperty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmSetProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmSetProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmSetProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  property_name_.ClearToEmpty();
  property_value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmSetProperty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes property_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_property_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes property_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_property_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmSetProperty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmSetProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // bytes property_name = 2;
  if (!this->property_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_property_name(), target);
  }

  // bytes property_value = 3;
  if (!this->property_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_property_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmSetProperty)
  return target;
}

size_t ReqGmSetProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmSetProperty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes property_name = 2;
  if (!this->property_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_property_name());
  }

  // bytes property_value = 3;
  if (!this->property_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_property_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmSetProperty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmSetProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmSetProperty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmSetProperty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmSetProperty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmSetProperty)
    MergeFrom(*source);
  }
}

void ReqGmSetProperty::MergeFrom(const ReqGmSetProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmSetProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.property_name().empty()) {
    _internal_set_property_name(from._internal_property_name());
  }
  if (!from.property_value().empty()) {
    _internal_set_property_value(from._internal_property_value());
  }
}

void ReqGmSetProperty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmSetProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmSetProperty::CopyFrom(const ReqGmSetProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmSetProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmSetProperty::IsInitialized() const {
  return true;
}

void ReqGmSetProperty::InternalSwap(ReqGmSetProperty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &property_name_, GetArenaForAllocation(),
      &other->property_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &property_value_, GetArenaForAllocation(),
      &other->property_value_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmSetProperty::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[3]);
}

// ===================================================================

class ReqGmOpenFunction::_Internal {
 public:
};

ReqGmOpenFunction::ReqGmOpenFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmOpenFunction)
}
ReqGmOpenFunction::ReqGmOpenFunction(const ReqGmOpenFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  function_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_function_id().empty()) {
    function_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_function_id(), 
      GetArenaForAllocation());
  }
  on_ = from.on_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmOpenFunction)
}

void ReqGmOpenFunction::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
function_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
on_ = 0;
}

ReqGmOpenFunction::~ReqGmOpenFunction() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmOpenFunction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmOpenFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  function_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmOpenFunction::ArenaDtor(void* object) {
  ReqGmOpenFunction* _this = reinterpret_cast< ReqGmOpenFunction* >(object);
  (void)_this;
}
void ReqGmOpenFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmOpenFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmOpenFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmOpenFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  function_id_.ClearToEmpty();
  on_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmOpenFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes function_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_function_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 on = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmOpenFunction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmOpenFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // bytes function_id = 2;
  if (!this->function_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_function_id(), target);
  }

  // int32 on = 3;
  if (this->on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_on(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmOpenFunction)
  return target;
}

size_t ReqGmOpenFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmOpenFunction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes function_id = 2;
  if (!this->function_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_function_id());
  }

  // int32 on = 3;
  if (this->on() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_on());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmOpenFunction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmOpenFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmOpenFunction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmOpenFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmOpenFunction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmOpenFunction)
    MergeFrom(*source);
  }
}

void ReqGmOpenFunction::MergeFrom(const ReqGmOpenFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmOpenFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.function_id().empty()) {
    _internal_set_function_id(from._internal_function_id());
  }
  if (from.on() != 0) {
    _internal_set_on(from._internal_on());
  }
}

void ReqGmOpenFunction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmOpenFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmOpenFunction::CopyFrom(const ReqGmOpenFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmOpenFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmOpenFunction::IsInitialized() const {
  return true;
}

void ReqGmOpenFunction::InternalSwap(ReqGmOpenFunction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &function_id_, GetArenaForAllocation(),
      &other->function_id_, other->GetArenaForAllocation()
  );
  swap(on_, other->on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmOpenFunction::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[4]);
}

// ===================================================================

class ReqGmAddResources_ReqGmAddResourceInfo::_Internal {
 public:
};

ReqGmAddResources_ReqGmAddResourceInfo::ReqGmAddResources_ReqGmAddResourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
}
ReqGmAddResources_ReqGmAddResourceInfo::ReqGmAddResources_ReqGmAddResourceInfo(const ReqGmAddResources_ReqGmAddResourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
}

void ReqGmAddResources_ReqGmAddResourceInfo::SharedCtor() {
resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
count_ = int64_t{0};
}

ReqGmAddResources_ReqGmAddResourceInfo::~ReqGmAddResources_ReqGmAddResourceInfo() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmAddResources_ReqGmAddResourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmAddResources_ReqGmAddResourceInfo::ArenaDtor(void* object) {
  ReqGmAddResources_ReqGmAddResourceInfo* _this = reinterpret_cast< ReqGmAddResources_ReqGmAddResourceInfo* >(object);
  (void)_this;
}
void ReqGmAddResources_ReqGmAddResourceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmAddResources_ReqGmAddResourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmAddResources_ReqGmAddResourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_id_.ClearToEmpty();
  count_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmAddResources_ReqGmAddResourceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes resource_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmAddResources_ReqGmAddResourceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes resource_id = 1;
  if (!this->resource_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_resource_id(), target);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  return target;
}

size_t ReqGmAddResources_ReqGmAddResourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resource_id = 1;
  if (!this->resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_resource_id());
  }

  // int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmAddResources_ReqGmAddResourceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmAddResources_ReqGmAddResourceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmAddResources_ReqGmAddResourceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
    MergeFrom(*source);
  }
}

void ReqGmAddResources_ReqGmAddResourceInfo::MergeFrom(const ReqGmAddResources_ReqGmAddResourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ReqGmAddResources_ReqGmAddResourceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmAddResources_ReqGmAddResourceInfo::CopyFrom(const ReqGmAddResources_ReqGmAddResourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmAddResources.ReqGmAddResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmAddResources_ReqGmAddResourceInfo::IsInitialized() const {
  return true;
}

void ReqGmAddResources_ReqGmAddResourceInfo::InternalSwap(ReqGmAddResources_ReqGmAddResourceInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_id_, GetArenaForAllocation(),
      &other->resource_id_, other->GetArenaForAllocation()
  );
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmAddResources_ReqGmAddResourceInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[5]);
}

// ===================================================================

class ReqGmAddResources::_Internal {
 public:
};

ReqGmAddResources::ReqGmAddResources(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  resource_infos_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmAddResources)
}
ReqGmAddResources::ReqGmAddResources(const ReqGmAddResources& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_infos_(from.resource_infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmAddResources)
}

void ReqGmAddResources::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqGmAddResources::~ReqGmAddResources() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmAddResources)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmAddResources::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmAddResources::ArenaDtor(void* object) {
  ReqGmAddResources* _this = reinterpret_cast< ReqGmAddResources* >(object);
  (void)_this;
}
void ReqGmAddResources::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmAddResources::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmAddResources::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmAddResources)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_infos_.Clear();
  player_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmAddResources::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .KWMsg.ReqGmAddResources.ReqGmAddResourceInfo resource_infos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmAddResources::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmAddResources)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // repeated .KWMsg.ReqGmAddResources.ReqGmAddResourceInfo resource_infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_resource_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_resource_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmAddResources)
  return target;
}

size_t ReqGmAddResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmAddResources)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .KWMsg.ReqGmAddResources.ReqGmAddResourceInfo resource_infos = 2;
  total_size += 1UL * this->_internal_resource_infos_size();
  for (const auto& msg : this->resource_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmAddResources::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmAddResources)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmAddResources* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmAddResources>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmAddResources)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmAddResources)
    MergeFrom(*source);
  }
}

void ReqGmAddResources::MergeFrom(const ReqGmAddResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmAddResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_infos_.MergeFrom(from.resource_infos_);
  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
}

void ReqGmAddResources::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmAddResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmAddResources::CopyFrom(const ReqGmAddResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmAddResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmAddResources::IsInitialized() const {
  return true;
}

void ReqGmAddResources::InternalSwap(ReqGmAddResources* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_infos_.InternalSwap(&other->resource_infos_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmAddResources::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[6]);
}

// ===================================================================

class ReqGmEnterBattle::_Internal {
 public:
};

ReqGmEnterBattle::ReqGmEnterBattle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmEnterBattle)
}
ReqGmEnterBattle::ReqGmEnterBattle(const ReqGmEnterBattle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  game_play_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_game_play_id().empty()) {
    game_play_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_game_play_id(), 
      GetArenaForAllocation());
  }
  team_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_team_id().empty()) {
    team_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_team_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmEnterBattle)
}

void ReqGmEnterBattle::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
game_play_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
team_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqGmEnterBattle::~ReqGmEnterBattle() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmEnterBattle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmEnterBattle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  game_play_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  team_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmEnterBattle::ArenaDtor(void* object) {
  ReqGmEnterBattle* _this = reinterpret_cast< ReqGmEnterBattle* >(object);
  (void)_this;
}
void ReqGmEnterBattle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmEnterBattle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmEnterBattle::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmEnterBattle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  game_play_id_.ClearToEmpty();
  team_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmEnterBattle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes game_play_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_game_play_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes team_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_team_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmEnterBattle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmEnterBattle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // bytes game_play_id = 2;
  if (!this->game_play_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_game_play_id(), target);
  }

  // bytes team_id = 3;
  if (!this->team_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmEnterBattle)
  return target;
}

size_t ReqGmEnterBattle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmEnterBattle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes game_play_id = 2;
  if (!this->game_play_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_game_play_id());
  }

  // bytes team_id = 3;
  if (!this->team_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_team_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmEnterBattle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmEnterBattle)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmEnterBattle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmEnterBattle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmEnterBattle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmEnterBattle)
    MergeFrom(*source);
  }
}

void ReqGmEnterBattle::MergeFrom(const ReqGmEnterBattle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmEnterBattle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.game_play_id().empty()) {
    _internal_set_game_play_id(from._internal_game_play_id());
  }
  if (!from.team_id().empty()) {
    _internal_set_team_id(from._internal_team_id());
  }
}

void ReqGmEnterBattle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmEnterBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmEnterBattle::CopyFrom(const ReqGmEnterBattle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmEnterBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmEnterBattle::IsInitialized() const {
  return true;
}

void ReqGmEnterBattle::InternalSwap(ReqGmEnterBattle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &game_play_id_, GetArenaForAllocation(),
      &other->game_play_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &team_id_, GetArenaForAllocation(),
      &other->team_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmEnterBattle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[7]);
}

// ===================================================================

class ReqGmEndBattle::_Internal {
 public:
};

ReqGmEndBattle::ReqGmEndBattle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmEndBattle)
}
ReqGmEndBattle::ReqGmEndBattle(const ReqGmEndBattle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  victory_ = from.victory_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmEndBattle)
}

void ReqGmEndBattle::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
victory_ = 0;
}

ReqGmEndBattle::~ReqGmEndBattle() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmEndBattle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmEndBattle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmEndBattle::ArenaDtor(void* object) {
  ReqGmEndBattle* _this = reinterpret_cast< ReqGmEndBattle* >(object);
  (void)_this;
}
void ReqGmEndBattle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmEndBattle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmEndBattle::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmEndBattle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  victory_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmEndBattle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 victory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          victory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmEndBattle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmEndBattle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // int32 victory = 2;
  if (this->victory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_victory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmEndBattle)
  return target;
}

size_t ReqGmEndBattle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmEndBattle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // int32 victory = 2;
  if (this->victory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_victory());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmEndBattle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmEndBattle)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmEndBattle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmEndBattle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmEndBattle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmEndBattle)
    MergeFrom(*source);
  }
}

void ReqGmEndBattle::MergeFrom(const ReqGmEndBattle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmEndBattle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.victory() != 0) {
    _internal_set_victory(from._internal_victory());
  }
}

void ReqGmEndBattle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmEndBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmEndBattle::CopyFrom(const ReqGmEndBattle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmEndBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmEndBattle::IsInitialized() const {
  return true;
}

void ReqGmEndBattle::InternalSwap(ReqGmEndBattle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  swap(victory_, other->victory_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmEndBattle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[8]);
}

// ===================================================================

class ReqGmChatMuzzle::_Internal {
 public:
};

ReqGmChatMuzzle::ReqGmChatMuzzle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmChatMuzzle)
}
ReqGmChatMuzzle::ReqGmChatMuzzle(const ReqGmChatMuzzle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  muzzle_time_ = from.muzzle_time_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmChatMuzzle)
}

void ReqGmChatMuzzle::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
muzzle_time_ = 0;
}

ReqGmChatMuzzle::~ReqGmChatMuzzle() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmChatMuzzle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmChatMuzzle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmChatMuzzle::ArenaDtor(void* object) {
  ReqGmChatMuzzle* _this = reinterpret_cast< ReqGmChatMuzzle* >(object);
  (void)_this;
}
void ReqGmChatMuzzle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmChatMuzzle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmChatMuzzle::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmChatMuzzle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  muzzle_time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmChatMuzzle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 muzzle_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          muzzle_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmChatMuzzle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmChatMuzzle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // int32 muzzle_time = 2;
  if (this->muzzle_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_muzzle_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmChatMuzzle)
  return target;
}

size_t ReqGmChatMuzzle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmChatMuzzle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // int32 muzzle_time = 2;
  if (this->muzzle_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_muzzle_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmChatMuzzle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmChatMuzzle)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmChatMuzzle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmChatMuzzle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmChatMuzzle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmChatMuzzle)
    MergeFrom(*source);
  }
}

void ReqGmChatMuzzle::MergeFrom(const ReqGmChatMuzzle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmChatMuzzle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.muzzle_time() != 0) {
    _internal_set_muzzle_time(from._internal_muzzle_time());
  }
}

void ReqGmChatMuzzle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmChatMuzzle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmChatMuzzle::CopyFrom(const ReqGmChatMuzzle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmChatMuzzle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmChatMuzzle::IsInitialized() const {
  return true;
}

void ReqGmChatMuzzle::InternalSwap(ReqGmChatMuzzle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  swap(muzzle_time_, other->muzzle_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmChatMuzzle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[9]);
}

// ===================================================================

class ReqGmSetGuideGroup::_Internal {
 public:
};

ReqGmSetGuideGroup::ReqGmSetGuideGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmSetGuideGroup)
}
ReqGmSetGuideGroup::ReqGmSetGuideGroup(const ReqGmSetGuideGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  guide_group_ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_guide_group_ids().empty()) {
    guide_group_ids_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guide_group_ids(), 
      GetArenaForAllocation());
  }
  guide_state_ = from.guide_state_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmSetGuideGroup)
}

void ReqGmSetGuideGroup::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guide_group_ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guide_state_ = 0;
}

ReqGmSetGuideGroup::~ReqGmSetGuideGroup() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmSetGuideGroup)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmSetGuideGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guide_group_ids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmSetGuideGroup::ArenaDtor(void* object) {
  ReqGmSetGuideGroup* _this = reinterpret_cast< ReqGmSetGuideGroup* >(object);
  (void)_this;
}
void ReqGmSetGuideGroup::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmSetGuideGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmSetGuideGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmSetGuideGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  guide_group_ids_.ClearToEmpty();
  guide_state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmSetGuideGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes guide_group_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_guide_group_ids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 guide_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          guide_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmSetGuideGroup::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmSetGuideGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // bytes guide_group_ids = 2;
  if (!this->guide_group_ids().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_guide_group_ids(), target);
  }

  // int32 guide_state = 3;
  if (this->guide_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_guide_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmSetGuideGroup)
  return target;
}

size_t ReqGmSetGuideGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmSetGuideGroup)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes guide_group_ids = 2;
  if (!this->guide_group_ids().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_guide_group_ids());
  }

  // int32 guide_state = 3;
  if (this->guide_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_guide_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmSetGuideGroup::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmSetGuideGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmSetGuideGroup* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmSetGuideGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmSetGuideGroup)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmSetGuideGroup)
    MergeFrom(*source);
  }
}

void ReqGmSetGuideGroup::MergeFrom(const ReqGmSetGuideGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmSetGuideGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.guide_group_ids().empty()) {
    _internal_set_guide_group_ids(from._internal_guide_group_ids());
  }
  if (from.guide_state() != 0) {
    _internal_set_guide_state(from._internal_guide_state());
  }
}

void ReqGmSetGuideGroup::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmSetGuideGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmSetGuideGroup::CopyFrom(const ReqGmSetGuideGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmSetGuideGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmSetGuideGroup::IsInitialized() const {
  return true;
}

void ReqGmSetGuideGroup::InternalSwap(ReqGmSetGuideGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &guide_group_ids_, GetArenaForAllocation(),
      &other->guide_group_ids_, other->GetArenaForAllocation()
  );
  swap(guide_state_, other->guide_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmSetGuideGroup::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[10]);
}

// ===================================================================

class ReqGmSendNotificationEvent::_Internal {
 public:
};

ReqGmSendNotificationEvent::ReqGmSendNotificationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmSendNotificationEvent)
}
ReqGmSendNotificationEvent::ReqGmSendNotificationEvent(const ReqGmSendNotificationEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_type_ = from.event_type_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmSendNotificationEvent)
}

void ReqGmSendNotificationEvent::SharedCtor() {
event_type_ = 0;
}

ReqGmSendNotificationEvent::~ReqGmSendNotificationEvent() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmSendNotificationEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmSendNotificationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqGmSendNotificationEvent::ArenaDtor(void* object) {
  ReqGmSendNotificationEvent* _this = reinterpret_cast< ReqGmSendNotificationEvent* >(object);
  (void)_this;
}
void ReqGmSendNotificationEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmSendNotificationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmSendNotificationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmSendNotificationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmSendNotificationEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 event_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmSendNotificationEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmSendNotificationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 event_type = 1;
  if (this->event_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_event_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmSendNotificationEvent)
  return target;
}

size_t ReqGmSendNotificationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmSendNotificationEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 event_type = 1;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_event_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmSendNotificationEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmSendNotificationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmSendNotificationEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmSendNotificationEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmSendNotificationEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmSendNotificationEvent)
    MergeFrom(*source);
  }
}

void ReqGmSendNotificationEvent::MergeFrom(const ReqGmSendNotificationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmSendNotificationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type() != 0) {
    _internal_set_event_type(from._internal_event_type());
  }
}

void ReqGmSendNotificationEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmSendNotificationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmSendNotificationEvent::CopyFrom(const ReqGmSendNotificationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmSendNotificationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmSendNotificationEvent::IsInitialized() const {
  return true;
}

void ReqGmSendNotificationEvent::InternalSwap(ReqGmSendNotificationEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(event_type_, other->event_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmSendNotificationEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[11]);
}

// ===================================================================

class ReqGmTriggerEvent::_Internal {
 public:
};

ReqGmTriggerEvent::ReqGmTriggerEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmTriggerEvent)
}
ReqGmTriggerEvent::ReqGmTriggerEvent(const ReqGmTriggerEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  params_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_params().empty()) {
    params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_params(), 
      GetArenaForAllocation());
  }
  event_id_ = from.event_id_;
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmTriggerEvent)
}

void ReqGmTriggerEvent::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
params_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
event_id_ = 0;
}

ReqGmTriggerEvent::~ReqGmTriggerEvent() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmTriggerEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmTriggerEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmTriggerEvent::ArenaDtor(void* object) {
  ReqGmTriggerEvent* _this = reinterpret_cast< ReqGmTriggerEvent* >(object);
  (void)_this;
}
void ReqGmTriggerEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmTriggerEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmTriggerEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmTriggerEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  params_.ClearToEmpty();
  event_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmTriggerEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 event_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_params();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmTriggerEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmTriggerEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // int32 event_id = 2;
  if (this->event_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_event_id(), target);
  }

  // bytes params = 3;
  if (!this->params().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_params(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmTriggerEvent)
  return target;
}

size_t ReqGmTriggerEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmTriggerEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes params = 3;
  if (!this->params().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_params());
  }

  // int32 event_id = 2;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_event_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmTriggerEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmTriggerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmTriggerEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmTriggerEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmTriggerEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmTriggerEvent)
    MergeFrom(*source);
  }
}

void ReqGmTriggerEvent::MergeFrom(const ReqGmTriggerEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmTriggerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.params().empty()) {
    _internal_set_params(from._internal_params());
  }
  if (from.event_id() != 0) {
    _internal_set_event_id(from._internal_event_id());
  }
}

void ReqGmTriggerEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmTriggerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmTriggerEvent::CopyFrom(const ReqGmTriggerEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmTriggerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmTriggerEvent::IsInitialized() const {
  return true;
}

void ReqGmTriggerEvent::InternalSwap(ReqGmTriggerEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &params_, GetArenaForAllocation(),
      &other->params_, other->GetArenaForAllocation()
  );
  swap(event_id_, other->event_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmTriggerEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[12]);
}

// ===================================================================

class ReqGmSetRecord::_Internal {
 public:
};

ReqGmSetRecord::ReqGmSetRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmSetRecord)
}
ReqGmSetRecord::ReqGmSetRecord(const ReqGmSetRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  record_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_record_name().empty()) {
    record_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_record_name(), 
      GetArenaForAllocation());
  }
  record_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_record_value().empty()) {
    record_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_record_value(), 
      GetArenaForAllocation());
  }
  ::memcpy(&opt_type_, &from.opt_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&record_col_) -
    reinterpret_cast<char*>(&opt_type_)) + sizeof(record_col_));
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmSetRecord)
}

void ReqGmSetRecord::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
record_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
record_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&opt_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&record_col_) -
    reinterpret_cast<char*>(&opt_type_)) + sizeof(record_col_));
}

ReqGmSetRecord::~ReqGmSetRecord() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmSetRecord)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmSetRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  record_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  record_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmSetRecord::ArenaDtor(void* object) {
  ReqGmSetRecord* _this = reinterpret_cast< ReqGmSetRecord* >(object);
  (void)_this;
}
void ReqGmSetRecord::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmSetRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmSetRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmSetRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  record_name_.ClearToEmpty();
  record_value_.ClearToEmpty();
  ::memset(&opt_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&record_col_) -
      reinterpret_cast<char*>(&opt_type_)) + sizeof(record_col_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmSetRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 opt_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          opt_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes record_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_record_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes record_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_record_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 record_row = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          record_row_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 record_col = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          record_col_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmSetRecord::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmSetRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  // int32 opt_type = 2;
  if (this->opt_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_opt_type(), target);
  }

  // bytes record_name = 3;
  if (!this->record_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_record_name(), target);
  }

  // bytes record_value = 4;
  if (!this->record_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_record_value(), target);
  }

  // int32 record_row = 5;
  if (this->record_row() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_record_row(), target);
  }

  // int32 record_col = 6;
  if (this->record_col() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_record_col(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmSetRecord)
  return target;
}

size_t ReqGmSetRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmSetRecord)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  // bytes record_name = 3;
  if (!this->record_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_record_name());
  }

  // bytes record_value = 4;
  if (!this->record_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_record_value());
  }

  // int32 opt_type = 2;
  if (this->opt_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_opt_type());
  }

  // int32 record_row = 5;
  if (this->record_row() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_record_row());
  }

  // int32 record_col = 6;
  if (this->record_col() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_record_col());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmSetRecord::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmSetRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmSetRecord* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmSetRecord>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmSetRecord)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmSetRecord)
    MergeFrom(*source);
  }
}

void ReqGmSetRecord::MergeFrom(const ReqGmSetRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmSetRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!from.record_name().empty()) {
    _internal_set_record_name(from._internal_record_name());
  }
  if (!from.record_value().empty()) {
    _internal_set_record_value(from._internal_record_value());
  }
  if (from.opt_type() != 0) {
    _internal_set_opt_type(from._internal_opt_type());
  }
  if (from.record_row() != 0) {
    _internal_set_record_row(from._internal_record_row());
  }
  if (from.record_col() != 0) {
    _internal_set_record_col(from._internal_record_col());
  }
}

void ReqGmSetRecord::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmSetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmSetRecord::CopyFrom(const ReqGmSetRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmSetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmSetRecord::IsInitialized() const {
  return true;
}

void ReqGmSetRecord::InternalSwap(ReqGmSetRecord* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &record_name_, GetArenaForAllocation(),
      &other->record_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &record_value_, GetArenaForAllocation(),
      &other->record_value_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqGmSetRecord, record_col_)
      + sizeof(ReqGmSetRecord::record_col_)
      - PROTOBUF_FIELD_OFFSET(ReqGmSetRecord, opt_type_)>(
          reinterpret_cast<char*>(&opt_type_),
          reinterpret_cast<char*>(&other->opt_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmSetRecord::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[13]);
}

// ===================================================================

class ReqGmCmdDebugAccount::_Internal {
 public:
};

ReqGmCmdDebugAccount::ReqGmCmdDebugAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KWMsg.ReqGmCmdDebugAccount)
}
ReqGmCmdDebugAccount::ReqGmCmdDebugAccount(const ReqGmCmdDebugAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_id().empty()) {
    player_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:KWMsg.ReqGmCmdDebugAccount)
}

void ReqGmCmdDebugAccount::SharedCtor() {
player_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqGmCmdDebugAccount::~ReqGmCmdDebugAccount() {
  // @@protoc_insertion_point(destructor:KWMsg.ReqGmCmdDebugAccount)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqGmCmdDebugAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  player_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqGmCmdDebugAccount::ArenaDtor(void* object) {
  ReqGmCmdDebugAccount* _this = reinterpret_cast< ReqGmCmdDebugAccount* >(object);
  (void)_this;
}
void ReqGmCmdDebugAccount::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqGmCmdDebugAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqGmCmdDebugAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:KWMsg.ReqGmCmdDebugAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqGmCmdDebugAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGmCmdDebugAccount::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KWMsg.ReqGmCmdDebugAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KWMsg.ReqGmCmdDebugAccount)
  return target;
}

size_t ReqGmCmdDebugAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KWMsg.ReqGmCmdDebugAccount)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes player_id = 1;
  if (!this->player_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_player_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGmCmdDebugAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KWMsg.ReqGmCmdDebugAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGmCmdDebugAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGmCmdDebugAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KWMsg.ReqGmCmdDebugAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KWMsg.ReqGmCmdDebugAccount)
    MergeFrom(*source);
  }
}

void ReqGmCmdDebugAccount::MergeFrom(const ReqGmCmdDebugAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KWMsg.ReqGmCmdDebugAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.player_id().empty()) {
    _internal_set_player_id(from._internal_player_id());
  }
}

void ReqGmCmdDebugAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KWMsg.ReqGmCmdDebugAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGmCmdDebugAccount::CopyFrom(const ReqGmCmdDebugAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KWMsg.ReqGmCmdDebugAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGmCmdDebugAccount::IsInitialized() const {
  return true;
}

void ReqGmCmdDebugAccount::InternalSwap(ReqGmCmdDebugAccount* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &player_id_, GetArenaForAllocation(),
      &other->player_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGmCmdDebugAccount::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_kwmsgcmd_2eproto_getter, &descriptor_table_kwmsgcmd_2eproto_once,
      file_level_metadata_kwmsgcmd_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace KWMsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::KWMsg::ReqCmdExecute* Arena::CreateMaybeMessage< ::KWMsg::ReqCmdExecute >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqCmdExecute >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmGetPlayerData* Arena::CreateMaybeMessage< ::KWMsg::ReqGmGetPlayerData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmGetPlayerData >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::AckGmGetPlayerData* Arena::CreateMaybeMessage< ::KWMsg::AckGmGetPlayerData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::AckGmGetPlayerData >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmSetProperty* Arena::CreateMaybeMessage< ::KWMsg::ReqGmSetProperty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmSetProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmOpenFunction* Arena::CreateMaybeMessage< ::KWMsg::ReqGmOpenFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmOpenFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo* Arena::CreateMaybeMessage< ::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmAddResources_ReqGmAddResourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmAddResources* Arena::CreateMaybeMessage< ::KWMsg::ReqGmAddResources >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmAddResources >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmEnterBattle* Arena::CreateMaybeMessage< ::KWMsg::ReqGmEnterBattle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmEnterBattle >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmEndBattle* Arena::CreateMaybeMessage< ::KWMsg::ReqGmEndBattle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmEndBattle >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmChatMuzzle* Arena::CreateMaybeMessage< ::KWMsg::ReqGmChatMuzzle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmChatMuzzle >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmSetGuideGroup* Arena::CreateMaybeMessage< ::KWMsg::ReqGmSetGuideGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmSetGuideGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmSendNotificationEvent* Arena::CreateMaybeMessage< ::KWMsg::ReqGmSendNotificationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmSendNotificationEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmTriggerEvent* Arena::CreateMaybeMessage< ::KWMsg::ReqGmTriggerEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmTriggerEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmSetRecord* Arena::CreateMaybeMessage< ::KWMsg::ReqGmSetRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmSetRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::KWMsg::ReqGmCmdDebugAccount* Arena::CreateMaybeMessage< ::KWMsg::ReqGmCmdDebugAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KWMsg::ReqGmCmdDebugAccount >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
