1. go 是编译型语言，使用 go 工具构造一个 go 源程序的可执行程序，同样需要经历 编译、链接、生成可执行文件的过程

2. go 原生的支持 Unicode，所以它可以处理任何国家的语言

3. go 的代码是使用包来组织的，它类似于其它语言中的库亦或者模块
  3.1 <一个包由一个或多个 .go 源文件组成>，它们存放在同一个文件夹内，该 <文件夹的名字描绘了这个包的作用>
  3.2 每个 go 源文件的开头以 <package> 声明，阐明了这个 go 文件属于哪个包

4. 导入其它的包
  4.1 单个导入
    import "package_name"
  4.2 多个导入
    import (
      "package_name_1"
      "package_name_2"
    )

5. 如何调用包

6. main 包
  1. main 包用来定义可执行程序，它不是用来定义一个库
  2. main 包中的 main 函数为程序的唯一入口点

7. go 规定不能在一条语句或声明中添加分号，所有跟在特定符号后面的 <换行符> 在编译期间会被解析为分号，所以在什么地方换行能够影响 go 代码的解析

8. go 有严格的语法要求，我们可以使用 gofmt 来将代码格式化为标准语法格式


fmt: 完成格式化输出和扫描输入

os: 该包提供了一些 <平台无关> 的库还是来与操作系统进行交互
  os.Args: 获取命令行参数
  os.
